local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false  -- Bu, GUI'nin oyuncu yeniden doğduğunda kaybolmamasını sağlar

local textLabel = Instance.new("TextLabel")
textLabel.Parent = screenGui
textLabel.Text = "CREATED BY BARIS"
textLabel.Size = UDim2.new(0, 600, 0, 75)  -- Yazının genişliğini ve yüksekliğini büyüttük
textLabel.Position = UDim2.new(0.5, -300, 0.5, -37.5)  -- Ekranın tam ortasına yerleştirir
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Başlangıçta beyaz renk
textLabel.BackgroundTransparency = 1  -- Arka planı tamamen şeffaf yapar
textLabel.TextSize = 70  -- Yazı boyutunu büyüttük
textLabel.Font = Enum.Font.SourceSansBold

local startTime = tick()  -- Zamanı kaydeder

-- Renk değiştiren fonksiyon
local function changeColor()
    local elapsedTime = tick() - startTime
    local r = math.abs(math.sin(elapsedTime * 10)) * 255
    local g = math.abs(math.cos(elapsedTime * 10)) * 255
    local b = math.abs(math.sin(elapsedTime * 15)) * 255
    textLabel.TextColor3 = Color3.fromRGB(r, g, b)
end

-- Renk değişimi ve yok olma işlemi
local function onUpdate()
    changeColor()

    -- 2 saniye sonra yok olma
    if tick() - startTime >= 2 then
        screenGui:Destroy()
    end
end

game:GetService("RunService").Heartbeat:Connect(onUpdate)
wait(0.8)

--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("GGHUB", "BloodTheme")

local Main = Window:NewTab("Scripts")
local MainSection = Main:NewSection("Universal scripts")

MainSection:NewButton("Infinte Yield", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)


MainSection:NewButton("Hitbox", "ButtonInfo", function()
--[[ 
    WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk! 
]]
-- leave a like pls

_G.HeadSize = 100
_G.Transparency = 0.7
_G.Disabled = true

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

-- Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 280)
frame.Position = UDim2.new(0.5, -150, 0.5, -140)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Parent = screenGui

-- Title Label
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Text = "Hitbox Settings"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 20
title.BackgroundTransparency = 1
title.Parent = frame

-- Hitbox Size Input
local sizeLabel = Instance.new("TextLabel")
sizeLabel.Size = UDim2.new(1, 0, 0, 30)
sizeLabel.Position = UDim2.new(0, 0, 0.15, 0)
sizeLabel.Text = "Hitbox Size (X, Y, Z):"
sizeLabel.TextColor3 = Color3.new(1, 1, 1)
sizeLabel.TextSize = 16
sizeLabel.BackgroundTransparency = 1
sizeLabel.Parent = frame

local sizeInput = Instance.new("TextBox")
sizeInput.Size = UDim2.new(1, 0, 0, 30)
sizeInput.Position = UDim2.new(0, 0, 0.25, 0)
sizeInput.Text = "100"
sizeInput.TextColor3 = Color3.new(1, 1, 1)
sizeInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
sizeInput.TextSize = 16
sizeInput.ClearTextOnFocus = false
sizeInput.Parent = frame

-- Hitbox Transparency Input
local transparencyLabel = Instance.new("TextLabel")
transparencyLabel.Size = UDim2.new(1, 0, 0, 30)
transparencyLabel.Position = UDim2.new(0, 0, 0.45, 0)
transparencyLabel.Text = "Hitbox Transparency (0 - 1):"
transparencyLabel.TextColor3 = Color3.new(1, 1, 1)
transparencyLabel.TextSize = 16
transparencyLabel.BackgroundTransparency = 1
transparencyLabel.Parent = frame

local transparencyInput = Instance.new("TextBox")
transparencyInput.Size = UDim2.new(1, 0, 0, 30)
transparencyInput.Position = UDim2.new(0, 0, 0.55, 0)
transparencyInput.Text = "0.7"
transparencyInput.TextColor3 = Color3.new(1, 1, 1)
transparencyInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
transparencyInput.TextSize = 16
transparencyInput.ClearTextOnFocus = false
transparencyInput.Parent = frame

-- OK Button
local okButton = Instance.new("TextButton")
okButton.Size = UDim2.new(0, 100, 0, 30)
okButton.Position = UDim2.new(0.5, -50, 0.75, 0)
okButton.Text = "OK"
okButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
okButton.TextColor3 = Color3.new(1, 1, 1)
okButton.Parent = frame

-- Close Hitbox Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 100, 0, 30)
closeButton.Position = UDim2.new(0.5, -50, 0.85, 0)
closeButton.Text = "Close Hitbox"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Parent = frame

-- X Button (Close GUI)
local xButton = Instance.new("TextButton")
xButton.Size = UDim2.new(0, 30, 0, 30)
xButton.Position = UDim2.new(1, -30, 0, 0)
xButton.Text = "X"
xButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
xButton.TextColor3 = Color3.new(1, 1, 1)
xButton.Parent = frame

-- Apply Hitbox Settings
okButton.MouseButton1Click:Connect(function()
    -- Update Hitbox Size
    local sizeValue = tonumber(sizeInput.Text)
    if sizeValue and sizeValue > 0 then
        _G.HeadSize = sizeValue
    end

    -- Update Hitbox Transparency
    local transparencyValue = tonumber(transparencyInput.Text)
    if transparencyValue and transparencyValue >= 0 and transparencyValue <= 1 then
        _G.Transparency = transparencyValue
    end
end)

-- Close Hitbox Function (sets Transparency to 1)
closeButton.MouseButton1Click:Connect(function()
    _G.Transparency = 1  -- Set transparency to 1 (fully visible) when closing
end)

-- Close GUI on X Button click
xButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Apply Hitbox to Players
game:GetService('RunService').RenderStepped:Connect(function()
    if not _G.Disabled then
        for _, player in next, game:GetService('Players'):GetPlayers() do
            if player.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    local character = player.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local humanoidRootPart = character.HumanoidRootPart
                        humanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                        humanoidRootPart.Transparency = _G.Transparency
                        humanoidRootPart.BrickColor = BrickColor.new("Really blue")
                        humanoidRootPart.Material = Enum.Material.Neon
                        humanoidRootPart.CanCollide = false
                    end
                end)
            end
        end
    end
end)

-- Make GUI Draggable
local dragging = false
local dragStart = nil
local startPos = nil

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

end)



MainSection:NewButton("Lua Executor!", "ButtonInfo", function()
-- Roblox Lua Script Executor (Resizable GUI)

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 350, 0, 300) -- Adjusted size
Frame.Position = UDim2.new(0.5, -175, 0.5, -150)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Active = true
Frame.Draggable = true -- Enabling drag for entire frame
Frame.Parent = ScreenGui

local DragBar = Instance.new("Frame")
DragBar.Size = UDim2.new(1, 0, 0, 30)
DragBar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
DragBar.Parent = Frame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 1, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Lua Executor"
Title.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Title.Parent = DragBar

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -30, 0, 5)
CloseButton.Text = "X"
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 14
CloseButton.Parent = DragBar
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -60, 0, 5)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(200, 200, 50)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.TextSize = 14
MinimizeButton.Parent = DragBar

local isMinimized = false
local previousSize = Frame.Size
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        previousSize = Frame.Size
        Frame.Size = UDim2.new(0, 350, 0, 30)
    else
        Frame.Size = previousSize
    end
    for _, child in ipairs(Frame:GetChildren()) do
        if child ~= DragBar then
            child.Visible = not isMinimized
        end
    end
end)

local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(0.9, 0, 0.5, 0)
ScrollingFrame.Position = UDim2.new(0.05, 0, 0.25, 0)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 1000)
ScrollingFrame.ScrollBarThickness = 8
ScrollingFrame.Parent = Frame

local ScriptBox = Instance.new("TextBox")
ScriptBox.Size = UDim2.new(1, -8, 0, 1000)
ScriptBox.Position = UDim2.new(0, 0, 0, 0)
ScriptBox.Text = "Enter Lua code here"
ScriptBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ScriptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptBox.Font = Enum.Font.SourceSans
ScriptBox.TextSize = 16
ScriptBox.ClearTextOnFocus = false -- Prevent text from clearing on focus
ScriptBox.MultiLine = true
ScriptBox.TextWrapped = false
ScriptBox.TextXAlignment = Enum.TextXAlignment.Left
ScriptBox.TextYAlignment = Enum.TextYAlignment.Top
ScriptBox.Parent = ScrollingFrame

local ExecuteButton = Instance.new("TextButton")
ExecuteButton.Size = UDim2.new(0.9, 0, 0.15, 0)
ExecuteButton.Position = UDim2.new(0.05, 0, 0.75, 0)
ExecuteButton.Text = "Execute"
ExecuteButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.Font = Enum.Font.SourceSansBold
ExecuteButton.TextSize = 16
ExecuteButton.Parent = Frame

local ClearButton = Instance.new("TextButton")
ClearButton.Size = UDim2.new(0.9, 0, 0.15, 0)
ClearButton.Position = UDim2.new(0.05, 0, 0.6, 0)
ClearButton.Text = "Clear"
ClearButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
ClearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearButton.Font = Enum.Font.SourceSansBold
ClearButton.TextSize = 16
ClearButton.Parent = Frame

-- Execute Button Functionality
ExecuteButton.MouseButton1Click:Connect(function()
    local code = ScriptBox.Text
    local func, errorMessage = loadstring(code) -- Attempt to load the Lua code
    if func then
        local success, result = pcall(func) -- Execute the Lua code safely
        if not success then
            warn("Error executing code: " .. result)
        end
    else
        warn("Error loading code: " .. errorMessage)
    end
end)

-- Clear Button Functionality
ClearButton.MouseButton1Click:Connect(function()
    ScriptBox.Text = ""
end)

end)


MainSection:NewButton("Fly Gui V3", "ButtonInfo", function()
    local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")
local closebutton = Instance.new("TextButton")
local mini = Instance.new("TextButton")
local mini2 = Instance.new("TextButton")

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "UP"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "DOWN"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "fly"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "FLY GUI V3 BY BARIS"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

closebutton.Name = "Close"
closebutton.Parent = main.Frame
closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)
closebutton.Font = "SourceSans"
closebutton.Size = UDim2.new(0, 45, 0, 28)
closebutton.Text = "X"
closebutton.TextSize = 30
closebutton.Position =  UDim2.new(0, 0, -1, 27)

mini.Name = "minimize"
mini.Parent = main.Frame
mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini.Font = "SourceSans"
mini.Size = UDim2.new(0, 45, 0, 28)
mini.Text = "-"
mini.TextSize = 40
mini.Position = UDim2.new(0, 44, -1, 27)

mini2.Name = "minimize2"
mini2.Parent = main.Frame
mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini2.Font = "SourceSans"
mini2.Size = UDim2.new(0, 45, 0, 28)
mini2.Text = "+"
mini2.TextSize = 40
mini2.Position = UDim2.new(0, 44, -1, 57)
mini2.Visible = false

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "FLY GUI V3 BY BARIS";
	Text = "BY  BARIS";
	Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 5;

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then
		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 
		nowe = true



		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end




	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new("BodyVelocity", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false




	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false



	end





end)

local tis

up.MouseButton1Down:connect(function()
	tis = up.MouseEnter:connect(function()
		while tis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
		end
	end)
end)

up.MouseLeave:connect(function()
	if tis then
		tis:Disconnect()
		tis = nil
	end
end)

local dis

down.MouseButton1Down:connect(function()
	dis = down.MouseEnter:connect(function()
		while dis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
		end
	end)
end)

down.MouseLeave:connect(function()
	if dis then
		dis:Disconnect()
		dis = nil
	end
end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
	speeds = speeds + 1
	speed.Text = speeds
	if nowe == true then


		tpwalking = false
		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
	end
end)
mine.MouseButton1Down:connect(function()
	if speeds == 1 then
		speed.Text = 'cannot be less than 1'
		wait(1)
		speed.Text = speeds
	else
		speeds = speeds - 1
		speed.Text = speeds
		if nowe == true then
			tpwalking = false
			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
		end
	end
end)

closebutton.MouseButton1Click:Connect(function()
	main:Destroy()
end)

mini.MouseButton1Click:Connect(function()
	up.Visible = false
	down.Visible = false
	onof.Visible = false
	plus.Visible = false
	speed.Visible = false
	mine.Visible = false
	mini.Visible = false
	mini2.Visible = true
	main.Frame.BackgroundTransparency = 1
	closebutton.Position =  UDim2.new(0, 0, -1, 57)
end)

mini2.MouseButton1Click:Connect(function()
	up.Visible = true
	down.Visible = true
	onof.Visible = true
	plus.Visible = true
	speed.Visible = true
	mine.Visible = true
	mini.Visible = true
	mini2.Visible = false
	main.Frame.BackgroundTransparency = 0 
	closebutton.Position =  UDim2.new(0, 0, -1, 27)
end)
end)

MainSection:NewButton("Free Camera!", "ButtonInfo", function()
    loadstring(game:HttpGet('https://zxfolix.github.io/freecamV2.txt'))()
end)

local MainSection = Main:NewSection("Bloxfruit Scripts")

MainSection:NewButton("Bloxfruit Script 1", "ButtonInfo", function()
    loadstring(game:HttpGet"https://raw.githubusercontent.com/Basicallyy/Basicallyy/main/MinGamingV4.lua")()
end)

MainSection:NewButton("Bloxfruit Script 2", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Yatsuraa/Yuri/main/Winterhub_V2.lua"))()
end)

local MainSection = Main:NewSection("Fortline")

MainSection:NewButton("Kill All (OP)", "ButtonInfo", function()
loadstring(game:HttpGet("https://gist.githubusercontent.com/ExploiterGuy/4d95c83a854d6e7265a43094219d0b00/raw/8bc8d511803b2e5b2a1b6abe70c6e1c994601323/%255B%25F0%259F%2594%25AB%255D%2520Fortline"))()
end)

local MainSection = Main:NewSection("Lucky Blocks")

MainSection:NewButton("Script1", "ButtonInfo", function()
    -- Roblox Script: Button GUI for Spawning Blocks

-- Check if GUI is already active
if game.Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("SpawnBlocksGui") then
    game.Players.LocalPlayer.PlayerGui:FindFirstChild("SpawnBlocksGui"):Destroy()
end

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpawnBlocksGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Display "MADE BY BARIS" with changing colors
local label = Instance.new("TextLabel")
label.Size = UDim2.new(0, 400, 0, 100)
label.Position = UDim2.new(0.5, -200, 0.5, -50)
label.BackgroundTransparency = 1
label.TextScaled = true
label.Font = Enum.Font.SourceSansBold
label.Text = "MADE BY BARIS"
label.Parent = screenGui

local colors = {Color3.new(1, 0, 0), Color3.new(0, 1, 0), Color3.new(0, 0, 1), Color3.new(1, 1, 0), Color3.new(1, 0, 1), Color3.new(0, 1, 1)}
for i = 1, 20 do
    label.TextColor3 = colors[(i - 1) % #colors + 1]
    task.wait(0.1)
end
label:Destroy()

-- Create a Frame for the buttons
local buttonFrame = Instance.new("Frame")
buttonFrame.Size = UDim2.new(0, 250, 0, 400)
buttonFrame.Position = UDim2.new(1, -260, 0, 10) -- Position at the top-right corner of the screen
buttonFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
buttonFrame.BorderSizePixel = 0
buttonFrame.Active = true
buttonFrame.Draggable = true
buttonFrame.Parent = screenGui

-- Create a Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Spawn Blocks"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.Parent = buttonFrame

-- Create Close (X) Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = buttonFrame
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Create Minimize (-) Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8)
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 18
minimizeButton.Parent = buttonFrame

local isMinimized = false
local buttonElements = {} -- Store button elements to toggle visibility
local inputElements = {} -- Store input elements to toggle visibility

local function toggleVisibility(visible)
    for _, button in ipairs(buttonElements) do
        button.Visible = visible
    end
    for _, input in ipairs(inputElements) do
        input.Visible = visible
    end
end

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    buttonFrame.Size = isMinimized and UDim2.new(0, 250, 0, 40) or UDim2.new(0, 250, 0, 400)
    toggleVisibility(not isMinimized)
end)

-- Create an input box for the repeat count
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0, 200, 0, 40)
inputBox.Position = UDim2.new(0, 25, 0, 350)
inputBox.PlaceholderText = "Enter repeat count"
inputBox.Text = ""
inputBox.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
inputBox.TextColor3 = Color3.new(1, 1, 1)
inputBox.Font = Enum.Font.SourceSansBold
inputBox.TextSize = 18
inputBox.Parent = buttonFrame

table.insert(inputElements, inputBox) -- Add input box to the toggle list

-- Function to create buttons
local function createButton(parent, text, position, onClick)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = position
    button.Text = text
    button.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 24
    button.Parent = parent

    table.insert(buttonElements, button) -- Add button to the toggle list

    button.MouseButton1Click:Connect(function()
        local repeatCount = tonumber(inputBox.Text) or 1
        for i = 1, repeatCount do
            onClick()
            if i % 10 == 0 then
                task.wait() -- Prevent freezing by yielding every 10 iterations
            end
        end
    end)
end

-- Create Buttons
createButton(buttonFrame, "Spawn Lucky Block", UDim2.new(0, 25, 0, 50), function()
    game.ReplicatedStorage.SpawnLuckyBlock:FireServer()
end)

createButton(buttonFrame, "Spawn Super Block", UDim2.new(0, 25, 0, 110), function()
    game.ReplicatedStorage.SpawnSuperBlock:FireServer()
end)

createButton(buttonFrame, "Spawn Rainbow Block", UDim2.new(0, 25, 0, 170), function()
    game.ReplicatedStorage.SpawnRainbowBlock:FireServer()
end)

createButton(buttonFrame, "Spawn Galaxy Block", UDim2.new(0, 25, 0, 230), function()
    game.ReplicatedStorage.SpawnGalaxyBlock:FireServer()
end)

createButton(buttonFrame, "Spawn Void Block", UDim2.new(0, 25, 0, 290), function()
    game.ReplicatedStorage.SpawnRainbowBlock:FireServer()
    game.ReplicatedStorage.SpawnGalaxyBlock:FireServer()
    game.ReplicatedStorage.SpawnRainbowBlock:FireServer()
    game.ReplicatedStorage.SpawnGalaxyBlock:FireServer()
    game.ReplicatedStorage.SpawnRainbowBlock:FireServer()
    game.ReplicatedStorage.SpawnGalaxyBlock:FireServer()
end)

end)


local MainSection = Main:NewSection("Counter Blox")

MainSection:NewButton("CH Hub", "ButtonInfo", function()
    --[[
The Best Counter Blox Script - Hexagon (Kill All, Gun Mods, Bomb Mods, Inventory Changer & More!) Release: March 31st 2021.

Made by Pawel12d#0272

ToDo:
- finish aimbot
- finish clantag
--]]

local Hint = Instance.new("Hint", game.CoreGui)
Hint.Text = "Hexagon | Waiting for the game to load..."

repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("GUI")

Hint.Text = "Hexagon | Setting up environment..."

-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Environment
local getrawmetatable = getrawmetatable or false
local http_request = http_request or request or (http and http.request) or (syn and syn.request) or false
local mousemove = mousemove or mousemoverel or mouse_move or false
local getsenv = getsenv or false
local listdir = listfiles or listdir or syn_io_listdir or false
local isfolder = isfolder or false

if (getrawmetatable == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: getrawmetatable.") end
if (http_request == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: request.") end
if (mousemove == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: mousemove.") end
if (getsenv == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: getsenv.") end
if (listdir == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: listdir.") end
if (isfolder == false) then return game.Players.LocalPlayer:Kick("Exploit not supported! Missing: isfolder.") end

Hint.Text = "Hexagon | Loading configuration settings..."

if not isfolder("hexagon") then
	print("creating hexagon folder")
	makefolder("hexagon")
end

if not isfolder("hexagon/configs") then
	print("creating hexagon configs folder")
	makefolder("hexagon/configs")
end

if not isfile("hexagon/custom_skins.txt") then
	print("downloading hexagon custom skins file")
	writefile("hexagon/custom_skins.txt", game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/default_data/custom_skins.txt"))
end

if not isfile("hexagon/custom_models.txt") then
	print("downloading hexagon custom models file")
	writefile("hexagon/custom_models.txt", game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/default_data/custom_models.txt"))
end

if not isfile("hexagon/inventories.txt") then
	print("downloading hexagon inventories file")
	writefile("hexagon/inventories.txt", game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/default_data/inventories.txt"))
end

if not isfile("hexagon/skyboxes.txt") then
	print("downloading hexagon skyboxes file")
	writefile("hexagon/skyboxes.txt", game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/default_data/skyboxes.txt"))
end

Hint.Text = "Hexagon | Loading..."

wait(1)

-- Viewmodels fix
for i,v in pairs(game.ReplicatedStorage.Viewmodels:GetChildren()) do
    if v:FindFirstChild("HumanoidRootPart") and v.HumanoidRootPart.Transparency ~= 1 then
        v.HumanoidRootPart.Transparency = 1
    end
end

game.ReplicatedStorage.Viewmodels["v_oldM4A1-S"].Silencer.Transparency = 1
local fix = game.ReplicatedStorage.Viewmodels["v_oldM4A1-S"].Silencer:Clone()
fix.Parent = game.ReplicatedStorage.Viewmodels["v_oldM4A1-S"]
fix.Name = "Silencer2"
fix.Transparency = 0

local Hitboxes = {
	["Head"] = {"Head"},
	["Chest"] = {"UpperTorso", "LowerTorso"},
	["Arms"] = {"LeftUpperArm", "LeftLowerArm", "LeftHand", "RightUpperArm", "RightLowerArm", "RightHand"},
	["Legs"] = {"LeftUpperLeg", "LeftLowerLeg", "LeftFoot", "RightUpperLeg", "RightLowerLeg", "RightFoot"}
}

local HexagonFolder = Instance.new("Folder", workspace)
HexagonFolder.Name = "HexagonFolder"

local oldOsPlatform = game.Players.LocalPlayer.OsPlatform

local Weapons = {}; for i,v in pairs(game.ReplicatedStorage.Weapons:GetChildren()) do if v:FindFirstChild("Model") then table.insert(Weapons, v.Name) end end

local Sounds = {
	["TTT a"] = workspace.RoundEnd,
	["TTT b"] = workspace.RoundStart,
	["T Win"] = workspace.Sounds.T,
	["CT Win"] = workspace.Sounds.CT,
	["Planted"] = workspace.Sounds.Arm,
	["Defused"] = workspace.Sounds.Defuse,
	["Rescued"] = workspace.Sounds.Rescue,
	["Explosion"] = workspace.Sounds.Explosion,
	["Becky"] = workspace.Sounds.Becky,
	["Beep"] = workspace.Sounds.Beep
}
	

local Cases = {}; for i,v in pairs(game.ReplicatedStorage.Cases:GetChildren()) do table.insert(Cases, v.Name) end

local Configs = {}
local Inventories = loadstring("return "..readfile("hexagon/inventories.txt"))()
local Skyboxes = loadstring("return "..readfile("hexagon/skyboxes.txt"))()



-- Main
local SilentLegitbot = {target = nil, aiming = false}
local LocalPlayer = game.Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local cbClient = getsenv(LocalPlayer.PlayerGui:WaitForChild("Client"))
local oldInventory = cbClient.CurrentInventory
local nocw_s = {}
local nocw_m = {}
local curVel = 16
local isBhopping = false
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/ESP.lua"))()
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pawel12d/hexagon/main/scripts/UILibrary.lua"))()
local Window = library:CreateWindow(Vector2.new(500, 500), Vector2.new((workspace.CurrentCamera.ViewportSize.X/2)-250, (workspace.CurrentCamera.ViewportSize.Y/2)-250))



-- Functions
local function RandomString(length, strings)
	local strings = strings or {
		"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z",
		"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z",
		"0","1","2","3","4","5","6","7","8","9",
	}
	local output = ""
	for i = 1,length do
		output = tostring(output..""..strings[math.random(1,#strings)])
		if i == length then
			return output
		end
	end
end

local function IsAlive(plr)
	if plr and plr.Character and plr.Character.FindFirstChild(plr.Character, "Humanoid") and plr.Character.Humanoid.Health > 0 then
		return true
	end

	return false
end

local function IsVisible(plr)
	return #workspace.CurrentCamera:GetPartsObscuringTarget({LocalPlayer.Character.Head.Position, plr.Character.Head.Position}, {LocalPlayer.Character, HexagonFolder}) == 0 and true or false
end

local function GetTeam(plr)
	return game.Teams[plr.Team.Name]
end

local function GetSite()
	if (LocalPlayer.Character.HumanoidRootPart.Position - workspace.Map.SpawnPoints.C4Plant.Position).magnitude > (LocalPlayer.Character.HumanoidRootPart.Position - workspace.Map.SpawnPoints.C4Plant2.Position).magnitude then
		return "A"
	else
		return "B"
	end
end

local function CharacterAdded()
	wait(0.5)
	if IsAlive(LocalPlayer) then
		LocalPlayer.Character.Humanoid.StateChanged:Connect(function(state)
			if library.pointers.MiscellaneousTabCategoryBunnyHopEnabled.value == true then
				if state == Enum.HumanoidStateType.Landed and UserInputService:IsKeyDown(Enum.KeyCode.Space) then
					LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				elseif state == Enum.HumanoidStateType.Jumping then
					isBhopping = true
					curVel = (curVel + library.pointers.MiscellaneousTabCategoryBunnyHopAcceleration.value) >= library.pointers.MiscellaneousTabCategoryBunnyHopMaxVelocity.value and library.pointers.MiscellaneousTabCategoryBunnyHopMaxVelocity.value or curVel + library.pointers.MiscellaneousTabCategoryBunnyHopAcceleration.value
				elseif UserInputService:IsKeyDown(Enum.KeyCode.Space) == false then
					isBhopping = false
					curVel = library.pointers.MiscellaneousTabCategoryBunnyHopMinVelocity.value
				end
			end
		end)
	end
end

local function PlayerAdded()
	
end

local function PlantC4()
	pcall(function()
	if IsAlive(LocalPlayer) and workspace.Map.Gamemode.Value == "defusal" and workspace.Status.Preparation.Value == false and not planting then 
		planting = true
		local pos = LocalPlayer.Character.HumanoidRootPart.CFrame 
		workspace.CurrentCamera.CameraType = "Fixed"
		LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.SpawnPoints.C4Plant.CFrame
		wait(0.2)
		game.ReplicatedStorage.Events.PlantC4:FireServer((pos + Vector3.new(0, -2.75, 0)) * CFrame.Angles(math.rad(90), 0, math.rad(180)), GetSite())
		wait(0.2)
		LocalPlayer.Character.HumanoidRootPart.CFrame = pos
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		game.Workspace.CurrentCamera.CameraType = "Custom"
		planting = false
	end
	end)
end

local function DefuseC4()
	pcall(function()
	if IsAlive(LocalPlayer) and workspace.Map.Gamemode.Value == "defusal" and not defusing and workspace:FindFirstChild("C4") then 
		defusing = true
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		local pos = LocalPlayer.Character.HumanoidRootPart.CFrame 
		workspace.CurrentCamera.CameraType = "Fixed"
		LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.C4.Handle.CFrame + Vector3.new(0, 2, 0)
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		wait(0.1)
		LocalPlayer.Backpack.PressDefuse:FireServer(workspace.C4)
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		wait(0.25)
		if IsAlive(LocalPlayer) and workspace:FindFirstChild("C4") and workspace.C4:FindFirstChild("Defusing") and workspace.C4.Defusing.Value == LocalPlayer then
			LocalPlayer.Backpack.Defuse:FireServer(workspace.C4)
		end
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		wait(0.2)
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		LocalPlayer.Character.HumanoidRootPart.CFrame = pos
		LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
		game.Workspace.CurrentCamera.CameraType = "Custom"
		defusing = false
	end
	end)
end

function GetSpectators()
	local CurrentSpectators = {}
	
	for i,v in pairs(game:GetService("Players"):GetChildren()) do 
		if v ~= game:GetService("Players").LocalPlayer then
			if not v.Character and v:FindFirstChild("CameraCF") and (v.CameraCF.Value.Position - workspace.CurrentCamera.CFrame.p).Magnitude < 10 then 
				table.insert(CurrentSpectators, v)
			end
		end
	end
	
	return CurrentSpectators
end

local function GetLegitbotTarget()
	local target,oldval = nil,math.huge
	
	for i,v in pairs(game.Players:GetPlayers()) do
		if IsAlive(v) and v ~= LocalPlayer and not v.Character:FindFirstChild("ForceField") then
			if library.pointers.AimbotTabCategoryLegitbotTeamCheck.value == false or GetTeam(v) ~= GetTeam(LocalPlayer) then
				if library.pointers.AimbotTabCategoryLegitbotVisibilityCheck.value == false or IsVisible(v) then
					local Vector, onScreen = workspace.CurrentCamera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
					local FoV = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Vector.X, Vector.Y)).magnitude
					
					if FoV < library.pointers.AimbotTabCategoryLegitbotFoV.value or library.pointers.AimbotTabCategoryLegitbotFoV.value == 0 then
						if math.floor((LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude) < library.pointers.AimbotTabCategoryLegitbotDistance.value or library.pointers.AimbotTabCategoryLegitbotDistance.value == 0 then
							--if library.pointers.AimbotTabCategoryLegitbotTargetPriority.value == "FoV" then
								local Vector, onScreen = workspace.CurrentCamera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
								local FoV = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Vector.X, Vector.Y)).magnitude
									
								if FoV < oldval then
									target = v
									oldval = FoV
								end
							--[[
							elseif library.pointers.AimbotTabCategoryLegitbotTargetPriority.value == "Distance" then
								local Distance = math.floor((v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude)
								
								if Distance < oldval then
									target = v
									oldval = Distance
								end
							elseif library.pointers.AimbotTabCategoryLegitbotTargetPriority.value == "Health" then
								local Health = v.Character.Humanoid.Health
									
								if Health < oldval then
									target = v
									oldval = Health
								end
							end
							--]]
						end
					end
				end
			end
		end
	end
	
	if target ~= nil then
		return target
	end
	
	return nil
end

local function GetLegitbotHitbox(plr)
	local target,oldval = nil,math.huge
	
	for i,v in pairs(library.pointers.AimbotTabCategoryLegitbotHitbox.value) do
		for i2,v2 in pairs(Hitboxes[v]) do
			targetpart = plr.Character:FindFirstChild(v2)
			
			if targetpart ~= nil then
				--if library.pointers.AimbotTabCategoryLegitbotHitboxPriority.value == "FoV" then
					local Vector, onScreen = workspace.CurrentCamera:WorldToScreenPoint(targetpart.Position)
					local FoV = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Vector.X, Vector.Y)).magnitude
					
					if FoV < oldval then
						target = targetpart
						oldval = FoV
					end
				--[[
				elseif library.pointers.AimbotTabCategoryLegitbotHitboxPriority.value == "Distance" then
					local Distance = math.floor((targetpart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude)
					
					if Distance < oldval then
						target = targetpart
						oldval = Distance
					end
				elseif library.pointers.AimbotTabCategoryLegitbotHitboxPriority.value == "Damage" then
					for i3,v3 in pairs(Hitboxes) do
						if table.find(v3, targetpart.Name) and i > oldval then
							target = targetpart
							oldval = i
						end
					end
				end
				--]]
			end
		end
	end
	
	if target ~= nil then
		return target
	end
	
	return nil
end

local function TableToNames(tbl, alt)
	local otp = {}
	
	if alt then
		for i,v in pairs(tbl) do
			table.insert(otp, v.weaponname)
		end
	else
		for i,v in pairs(tbl) do
			table.insert(otp, i)
		end
	end
	
	return otp
end

local function AddCustomSkin(tbl)
	if tbl and tbl.weaponname and tbl.skinname and tbl.model then
		newfolder = Instance.new("Folder")
		newfolder.Name = tbl.skinname
		newfolder.Parent = game.ReplicatedStorage.Skins[tbl.weaponname]

		for i,v in pairs(tbl.model) do
			newvalue = Instance.new("StringValue")
			newvalue.Name = i
			newvalue.Value = v
			newvalue.Parent = newfolder
		end
		
		if tbl.skinimage ~= nil then
			newvalue1 = Instance.new("StringValue")
			newvalue1.Name = tbl.skinname
			newvalue1.Value = tbl.skinimage
			newvalue1.Parent = LocalPlayer.PlayerGui.Client.Images[tbl.weaponname]
		end

		if tbl.skinrarity ~= nil then
			newvalue2 = Instance.new("StringValue")
			newvalue2.Name = "Quality"
			newvalue2.Value = tbl.skinrarity
			newvalue2.Parent = newvalue1
			
			print("pro", newvalue2)

			newvalue3 = Instance.new("StringValue")
			newvalue3.Name = tostring(tbl.weaponname.."_"..tbl.skinname)
			newvalue3.Value = tbl.skinrarity
			newvalue3.Parent = LocalPlayer.PlayerGui.Client.Rarities
		end
		
		table.insert(nocw_s, {tostring(tbl.weaponname.."_"..tbl.skinname)})
		
		print("Custom skin: "..tostring(tbl.weaponname.."_"..tbl.skinname).." successfully injected!")
	end
end

local function AddCustomModel(tbl)
	if tbl and tbl.weaponname and tbl.modelname and tbl.model and game.ReplicatedStorage.Weapons:FindFirstChild(tbl.modelname) then
		if game.ReplicatedStorage.Viewmodels:FindFirstChild("v_"..tbl.modelname) then
			game.ReplicatedStorage.Viewmodels["v_"..tbl.modelname]:Destroy()
		end
		
		newmodel = tbl.model
		newmodel.Name = "v_"..tbl.modelname
		newmodel.Parent = game.ReplicatedStorage.Viewmodels
		
		table.insert(nocw_m, {tostring(tbl.modelname)})
	end
end



-- GUI
local AimbotTab = Window:CreateTab("Aimbot")

local AimbotTabCategoryLegitbot = AimbotTab:AddCategory("Legitbot", 1)

AimbotTabCategoryLegitbot:AddToggle("Enabled", false, "AimbotTabCategoryLegitbotEnabled")

AimbotTabCategoryLegitbot:AddToggle("Silent", false, "AimbotTabCategoryLegitbotSilent")

AimbotTabCategoryLegitbot:AddToggle("Team Check", false, "AimbotTabCategoryLegitbotTeamCheck")

AimbotTabCategoryLegitbot:AddToggle("Visibility Check", false, "AimbotTabCategoryLegitbotVisibilityCheck")

AimbotTabCategoryLegitbot:AddKeybind("Keybind", nil, "AimbotTabCategoryLegitbotKeybind")

AimbotTabCategoryLegitbot:AddMultiDropdown("Hitbox", {"Head", "Chest", "Arms", "Legs"}, {"Head"}, "AimbotTabCategoryLegitbotHitbox")

AimbotTabCategoryLegitbot:AddDropdown("Hitbox Priority", {"FoV"}, "FoV", "AimbotTabCategoryLegitbotHitboxPriority")

AimbotTabCategoryLegitbot:AddDropdown("Target Priority", {"FoV"}, "FoV", "AimbotTabCategoryLegitbotTargetPriority")

AimbotTabCategoryLegitbot:AddSlider("Field of View", {0, 360, 0, 1, "°"}, "AimbotTabCategoryLegitbotFoV")

AimbotTabCategoryLegitbot:AddSlider("Distance", {0, 2048, 0, 1, " studs"}, "AimbotTabCategoryLegitbotDistance")

AimbotTabCategoryLegitbot:AddSlider("Smoothness", {1, 30, 1, 1, ""}, "AimbotTabCategoryLegitbotSmoothness")

AimbotTabCategoryLegitbot:AddSlider("Hitchance", {0, 100, 100, 1, "%"}, "AimbotTabCategoryLegitbotHitchance")

local AimbotTabCategoryAntiAimbot = AimbotTab:AddCategory("Anti Aimbot", 2)

AimbotTabCategoryAntiAimbot:AddToggle("Enabled", false, "AimbotTabCategoryAntiAimbotEnabled", function(val)
	AntiAimbot = val
	
	while AntiAimbot do
		if IsAlive(LocalPlayer) and (library.pointers.AimbotTabCategoryAntiAimbotDisableWhileClimbing.value == false or cbClient.climbing == false) then
			function RotatePlayer(pos)
				local Gyro = Instance.new('BodyGyro')
				Gyro.D = 0
				Gyro.P = (library.pointers.AimbotTabCategoryAntiAimbotYawStrenght.value * 100)
				Gyro.MaxTorque = Vector3.new(0, (library.pointers.AimbotTabCategoryAntiAimbotYawStrenght.value * 100), 0)
				Gyro.Parent = game.Players.LocalPlayer.Character.UpperTorso
				Gyro.CFrame = CFrame.new(Gyro.Parent.Position, pos.Position)
				wait()
				Gyro:Destroy()
			end
			
			if library.pointers.AimbotTabCategoryAntiAimbotRemoveHeadHitbox.value == true then
				if game.Players.LocalPlayer.Character:FindFirstChild("HeadHB") then
					game.Players.LocalPlayer.Character.HeadHB:Destroy()
				end
				if game.Players.LocalPlayer.Character:FindFirstChild("FakeHead") then
					game.Players.LocalPlayer.Character.FakeHead:Destroy()
				end
				if game.Players.LocalPlayer.Character:FindFirstChild("Head") and game.Players.LocalPlayer.Character.Head.Transparency ~= 0 then
					game.Players.LocalPlayer.Character.Head.Transparency = 0
				end
			end
			
			if table.find({"Backward", "Left", "Right"}, library.pointers.AimbotTabCategoryAntiAimbotYaw.value) then
				game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
				local Angle = (
					library.pointers.AimbotTabCategoryAntiAimbotYaw.value == "Backward" and CFrame.new(-4, 0, 0) or
					library.pointers.AimbotTabCategoryAntiAimbotYaw.value == "Left" and CFrame.new(-180, 0, 0) or
					library.pointers.AimbotTabCategoryAntiAimbotYaw.value == "Right" and CFrame.new(180, 0, 0)
				)
				RotatePlayer(workspace.CurrentCamera.CFrame * Angle)
			elseif library.pointers.AimbotTabCategoryAntiAimbotYaw.value == "Spin" then
				game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(library.pointers.AimbotTabCategoryAntiAimbotYawStrenght.value), 0)
			elseif game.Players.LocalPlayer.Character.Humanoid.AutoRotate == false then
				game.Players.LocalPlayer.Character.Humanoid.AutoRotate = true
			end
		end

		wait(0.02)
	end
	
	if IsAlive(LocalPlayer) then
		game.Players.LocalPlayer.Character.Humanoid.AutoRotate = true
	end
end)

AimbotTabCategoryAntiAimbot:AddDropdown("Pitch", {"Default", "Up", "Down", "Boneless", "Random"}, "Default", "AimbotTabCategoryAntiAimbotPitch")

AimbotTabCategoryAntiAimbot:AddDropdown("Yaw", {"Default", "Forward", "Backward", "Left", "Right", "Spin"}, "Default", "AimbotTabCategoryAntiAimbotYaw")

AimbotTabCategoryAntiAimbot:AddSlider("Yaw Strenght", {0, 100, 50, 1, ""}, "AimbotTabCategoryAntiAimbotYawStrenght")

AimbotTabCategoryAntiAimbot:AddToggle("Remove Head Hitbox", false, "AimbotTabCategoryAntiAimbotRemoveHeadHitbox")

AimbotTabCategoryAntiAimbot:AddToggle("Disable While Climbing", false, "AimbotTabCategoryAntiAimbotDisableWhileClimbing")

AimbotTabCategoryAntiAimbot:AddKeybind("Manual Forward", nil, "AimbotTabCategoryAntiAimbotManualForward", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then library.pointers.AimbotTabCategoryAntiAimbotYaw:Set("Forward") end
end)

AimbotTabCategoryAntiAimbot:AddKeybind("Manual Left", nil, "AimbotTabCategoryAntiAimbotManualLeft", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then library.pointers.AimbotTabCategoryAntiAimbotYaw:Set("Left") end
end)

AimbotTabCategoryAntiAimbot:AddKeybind("Manual Right", nil, "AimbotTabCategoryAntiAimbotManualRight", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then library.pointers.AimbotTabCategoryAntiAimbotYaw:Set("Right") end
end)

AimbotTabCategoryAntiAimbot:AddKeybind("Manual Backward", nil, "AimbotTabCategoryAntiAimbotManualBackward", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then library.pointers.AimbotTabCategoryAntiAimbotYaw:Set("Backward") end
end)

AimbotTabCategoryAntiAimbot:AddKeybind("Manual Spin", nil, "AimbotTabCategoryAntiAimbotManualSpin", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then library.pointers.AimbotTabCategoryAntiAimbotYaw:Set("Spin") end
end)



local VisualsTab = Window:CreateTab("Visuals") 

local VisualsTabCategoryPlayers = VisualsTab:AddCategory("Players", 1)

VisualsTabCategoryPlayers:AddToggle("Enabled", false, "VisualsTabCategoryPlayersEnabled", function(val)
	ESP.Enabled = val
end)

VisualsTabCategoryPlayers:AddToggle("Info", false, "VisualsTabCategoryPlayersInfo", function(val)
	ESP.ShowInfo = val
end)

VisualsTabCategoryPlayers:AddToggle("Tracers", false, "VisualsTabCategoryPlayersTracers", function(val)
	ESP.Tracers = val
end)

VisualsTabCategoryPlayers:AddToggle("Boxes", false, "VisualsTabCategoryPlayersBoxes", function(val)
	ESP.Boxes = val
end)

VisualsTabCategoryPlayers:AddToggle("Show Team", false, "VisualsTabCategoryPlayersShowTeam", function(val)
	ESP.ShowTeam = val
end)

VisualsTabCategoryPlayers:AddToggle("Use Team Color", false, "VisualsTabCategoryPlayersUseTeamColor", function(val)
	ESP.UseTeamColor = val
end)

VisualsTabCategoryPlayers:AddMultiDropdown("Info Settings", {"Name", "Health", "Weapons", "Distance"}, {}, "VisualsTabCategoryPlayersInfoSettings", function(val)
	ESP.Info.Name = (table.find(val, "Name") and true) or false
	ESP.Info.Health = (table.find(val, "Health") and true) or false
	ESP.Info.Weapons = (table.find(val, "Weapons") and true) or false
	ESP.Info.Distance = (table.find(val, "Distance") and true) or false
end)

VisualsTabCategoryPlayers:AddColorPicker("Team Color", Color3.new(0,1,0), "VisualsTabCategoryPlayersTeamColor", function(val)
	ESP.TeamColor = val
end)

VisualsTabCategoryPlayers:AddColorPicker("Enemy Color", Color3.new(1,0,0), "VisualsTabCategoryPlayersEnemyColor", function(val)
	ESP.EnemyColor = val
end)

local VisualsTabCategoryDroppedESP = VisualsTab:AddCategory("Dropped ESP", 1)

VisualsTabCategoryDroppedESP:AddToggle("Enabled", false, "VisualsTabCategoryDroppedESPEnabled")

VisualsTabCategoryDroppedESP:AddColorPicker("Color", Color3.new(1,1,1), "VisualsTabCategoryDroppedESPColor")

VisualsTabCategoryDroppedESP:AddMultiDropdown("Info", {"Icon", "Text", "Ammo"}, {"Icon", "Text", "Ammo"}, "VisualsTabCategoryDroppedESPInfo")

local VisualsTabCategoryGrenadeESP = VisualsTab:AddCategory("Grenade ESP", 1)

VisualsTabCategoryGrenadeESP:AddToggle("Enabled", false, "VisualsTabCategoryGrenadeESPEnabled")

VisualsTabCategoryGrenadeESP:AddColorPicker("Color", Color3.new(1,0.5,0), "VisualsTabCategoryGrenadeESPColor")

VisualsTabCategoryGrenadeESP:AddMultiDropdown("Info", {"Icon", "Text"}, {"Icon", "Text"}, "VisualsTabCategoryGrenadeESPInfo")

local VisualsTabCategoryBombESP = VisualsTab:AddCategory("Bomb ESP", 1)

VisualsTabCategoryBombESP:AddToggle("Enabled", false, "VisualsTabCategoryBombESPEnabled")

VisualsTabCategoryBombESP:AddColorPicker("Color", Color3.new(1,0,0), "VisualsTabCategoryBombESPColor")

VisualsTabCategoryBombESP:AddMultiDropdown("Info", {"Icon", "Text", "Timer"}, {"Icon", "Text", "Timer"}, "VisualsTabCategoryBombESPInfo")

local VisualsTabCategoryOthers = VisualsTab:AddCategory("Others", 1)

VisualsTabCategoryOthers:AddMultiDropdown("Remove Effects", {"Scope", "Flash", "Smoke", "Bullet Holes", "Blood", "Ragdolls"}, {}, "VisualsTabCategoryOthersRemoveEffects", function(val)
	if table.find(val, "Scope") then
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.ImageTransparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.ImageTransparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Size = UDim2.new(2,0,2,0)
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Position = UDim2.new(-0.5,0,-0.5,0)
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Blur.ImageTransparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Blur.Blur.ImageTransparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame1.Transparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame2.Transparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame3.Transparency = 1
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame4.Transparency = 1
	else
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.ImageTransparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.ImageTransparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Size = UDim2.new(1,0,1,0)
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Position = UDim2.new(0,0,0,0)
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Blur.ImageTransparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Scope.Scope.Blur.Blur.ImageTransparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame1.Transparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame2.Transparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame3.Transparency = 0
		LocalPlayer.PlayerGui.GUI.Crosshairs.Frame4.Transparency = 0
	end
	
	if table.find(val, "Flash") then
		LocalPlayer.PlayerGui.Blnd.Enabled = false
	else
		LocalPlayer.PlayerGui.Blnd.Enabled = true
	end
	
	if table.find(val, "Smoke") then
		for i,v in pairs(workspace.Ray_Ignore.Smokes:GetChildren()) do
			if v.Name == "Smoke" then
				v:Remove()
			end
		end
	end
	
	if table.find(val, "Bullet Holes") then
		for i,v in pairs(workspace.Debris:GetChildren()) do
			if v.Name == "Bullet" then
				v:Remove()
			end
		end
	end
	
	if table.find(val, "Blood") then
		for i,v in pairs(workspace.Debris:GetChildren()) do
			if v.Name == "SurfaceGui" then
				v:Remove()
			end
		end
	end
	
	if table.find(val, "Ragdolls") then
		-- Ragdolls are currently disabled in the game
	end
end)

VisualsTabCategoryOthers:AddColorPicker("Ambient", Color3.new(1,1,1), "VisualsTabCategoryOthersAmbient", function(val)
	workspace.CurrentCamera.ColorCorrection.TintColor = val
end)

VisualsTabCategoryOthers:AddDropdown("Skybox", TableToNames(Skyboxes), "Default", "VisualsTabCategoryOthersSkybox", function(val)
	if game.Lighting:FindFirstChild("HEXAGON_SKYBOX") then
		game.Lighting:FindFirstChild("HEXAGON_SKYBOX"):Destroy()
	end
	
	if val ~= "Default" and rawget(Skyboxes, val) then
		local NewSkybox = Instance.new("Sky", game.Lighting)
		NewSkybox.Name = "HEXAGON_SKYBOX"
		
		for i,v in pairs(rawget(Skyboxes, val)) do
			NewSkybox[i] = v
		end
	end
end)

VisualsTabCategoryOthers:AddToggle("Bullet Tracers", false, "VisualsTabCategoryOthersBulletTracers")

VisualsTabCategoryOthers:AddColorPicker("Bullet Tracers Color", Color3.new(0,0.5,1), "VisualsTabCategoryOthersBulletTracersColor")

VisualsTabCategoryOthers:AddToggle("Bullet Impacts", false, "VisualsTabCategoryOthersBulletImpacts")

VisualsTabCategoryOthers:AddColorPicker("Bullet Impacts Color", Color3.new(1,0,0), "VisualsTabCategoryOthersBulletImpactsColor")

local VisualsTabCategoryViewmodel = VisualsTab:AddCategory("Viewmodel", 2)

VisualsTabCategoryViewmodel:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelEnabled", function(val)
	cbClient.fieldofview = (val == true and library.pointers.VisualsTabCategoryViewmodelFoV.value or 80)
	workspace.CurrentCamera.FieldOfView = (val == true and library.pointers.VisualsTabCategoryViewmodelFoV.value or 80)
end)

VisualsTabCategoryViewmodel:AddSlider("Field of View", {0, 120, 80, 1, "°"}, "VisualsTabCategoryViewmodelFoV", function(val)
	cbClient.fieldofview = (library.pointers.VisualsTabCategoryViewmodelEnabled.value == true and val or 80)
	workspace.CurrentCamera.FieldOfView = (library.pointers.VisualsTabCategoryViewmodelEnabled.value == true and val or 80)
end)

VisualsTabCategoryViewmodel:AddSlider("Viewmodel Offset X", {0, 360, 180, 1, "°"}, "VisualsTabCategoryViewmodelOffsetX")

VisualsTabCategoryViewmodel:AddSlider("Viewmodel Offset Y", {0, 360, 180, 1, "°"}, "VisualsTabCategoryViewmodelOffsetY")

VisualsTabCategoryViewmodel:AddSlider("Viewmodel Offset Z", {0, 360, 180, 1, "°"}, "VisualsTabCategoryViewmodelOffsetZ")

VisualsTabCategoryViewmodel:AddSlider("Viewmodel Offset Roll", {0, 360, 180, 1, "°"}, "VisualsTabCategoryViewmodelOffsetRoll")

VisualsTabCategoryViewmodel:AddButton("Reset", function()
    library.pointers.VisualsTabCategoryViewmodelEnabled:Set(false)
	library.pointers.VisualsTabCategoryViewmodelFoV:Set(80)
	library.pointers.VisualsTabCategoryViewmodelOffsetX:Set(180)
	library.pointers.VisualsTabCategoryViewmodelOffsetY:Set(180)
	library.pointers.VisualsTabCategoryViewmodelOffsetZ:Set(180)
	library.pointers.VisualsTabCategoryViewmodelOffsetRoll:Set(180)
end)

local VisualsTabCategoryThirdPerson = VisualsTab:AddCategory("Third Person", 2)

VisualsTabCategoryThirdPerson:AddToggle("Enabled", false, "VisualsTabCategoryThirdPersonEnabled", function(val)
	if val == true then
		game:GetService("RunService"):BindToRenderStep("ThirdPerson", 100, function()
			if LocalPlayer.CameraMinZoomDistance ~= library.pointers.VisualsTabCategoryThirdPersonDistance.value then
				LocalPlayer.CameraMinZoomDistance = library.pointers.VisualsTabCategoryThirdPersonDistance.value
				LocalPlayer.CameraMaxZoomDistance = library.pointers.VisualsTabCategoryThirdPersonDistance.value
				workspace.ThirdPerson.Value = true
			end
		end)
	else
		game:GetService("RunService"):UnbindFromRenderStep("ThirdPerson")
		if IsAlive(LocalPlayer) then
			wait()
			workspace.ThirdPerson.Value = false
			LocalPlayer.CameraMinZoomDistance = 0
			LocalPlayer.CameraMaxZoomDistance = 0
		end
	end
end)

VisualsTabCategoryThirdPerson:AddKeybind("Keybind", nil, "VisualsTabCategoryThirdPersonKeybind", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then
		library.pointers.VisualsTabCategoryThirdPersonEnabled:Set(not library.pointers.VisualsTabCategoryThirdPersonEnabled.value)
	end
end)

VisualsTabCategoryThirdPerson:AddSlider("Distance", {0, 50, 10, 1, ""}, "VisualsTabCategoryThirdPersonDistance")

local VisualsTabCategoryViewmodelColors = VisualsTab:AddCategory("Viewmodel Colors", 2)

VisualsTabCategoryViewmodelColors:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelColorsEnabled")

VisualsTabCategoryViewmodelColors:AddLabel("")
VisualsTabCategoryViewmodelColors:AddLabel("Arms")
VisualsTabCategoryViewmodelColors:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelColorsArms")
VisualsTabCategoryViewmodelColors:AddColorPicker("Color", Color3.new(1,1,1), "VisualsTabCategoryViewmodelColorsArmsColor")
VisualsTabCategoryViewmodelColors:AddSlider("Transparency", {0, 1, 0, 0.01, ""}, "VisualsTabCategoryViewmodelColorsArmsTransparency")

VisualsTabCategoryViewmodelColors:AddLabel("")
VisualsTabCategoryViewmodelColors:AddLabel("Gloves")
VisualsTabCategoryViewmodelColors:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelColorsGloves")
VisualsTabCategoryViewmodelColors:AddColorPicker("Color", Color3.new(1,1,1), "VisualsTabCategoryViewmodelColorsGlovesColor")
VisualsTabCategoryViewmodelColors:AddSlider("Transparency", {0, 1, 0, 0.01, ""}, "VisualsTabCategoryViewmodelColorsGlovesTransparency")

VisualsTabCategoryViewmodelColors:AddLabel("")
VisualsTabCategoryViewmodelColors:AddLabel("Sleeves")
VisualsTabCategoryViewmodelColors:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelColorsSleeves")
VisualsTabCategoryViewmodelColors:AddColorPicker("Color", Color3.new(1,1,1), "VisualsTabCategoryViewmodelColorsSleevesColor")
VisualsTabCategoryViewmodelColors:AddSlider("Transparency", {0, 1, 0, 0.01, ""}, "VisualsTabCategoryViewmodelColorsSleevesTransparency")

VisualsTabCategoryViewmodelColors:AddLabel("")
VisualsTabCategoryViewmodelColors:AddLabel("Weapons")
VisualsTabCategoryViewmodelColors:AddToggle("Enabled", false, "VisualsTabCategoryViewmodelColorsWeapons")
VisualsTabCategoryViewmodelColors:AddColorPicker("Color", Color3.new(1,1,1), "VisualsTabCategoryViewmodelColorsWeaponsColor")
VisualsTabCategoryViewmodelColors:AddDropdown("Material", {"SmoothPlastic", "Neon", "ForceField", "Wood", "Glass"}, "SmoothPlastic", "VisualsTabCategoryViewmodelColorsWeaponsMaterial")
VisualsTabCategoryViewmodelColors:AddSlider("Transparency", {0, 1, 0, 0.01, ""}, "VisualsTabCategoryViewmodelColorsWeaponsTransparency")



local MiscellaneousTab = Window:CreateTab("Miscellaneous")

local MiscellaneousTabCategoryMain = MiscellaneousTab:AddCategory("Main", 1)

MiscellaneousTabCategoryMain:AddDropdown("Waypoints Teleport", {"Spawn T", "Spawn CT", "Bombsite A", "Bombsite B"}, "-", "MiscellaneousTabCategoryMainWaypointsTeleport", function(val)
	if val == "Spawn T" then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Map.SpawnPoints["BuyArea"].Position + Vector3.new(0, 3, 0))
		library.pointers.MiscellaneousTabCategoryMainWaypointsTeleport:Set("-")
	elseif val == "Spawn CT" then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Map.SpawnPoints["BuyArea2"].Position + Vector3.new(0, 3, 0))
		library.pointers.MiscellaneousTabCategoryMainWaypointsTeleport:Set("-")
	elseif val == "Bombsite A" then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Map.SpawnPoints["C4Plant2"].Position + Vector3.new(0, 3, 0))
		library.pointers.MiscellaneousTabCategoryMainWaypointsTeleport:Set("-")
	elseif val == "Bombsite B" then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(workspace.Map.SpawnPoints["C4Plant"].Position + Vector3.new(0, 3, 0))
		library.pointers.MiscellaneousTabCategoryMainWaypointsTeleport:Set("-")
	end
end)

MiscellaneousTabCategoryMain:AddDropdown("Places Teleport", {"Casual", "Competitive", "Deathmatch", "Trading"}, "-", "MiscellaneousTabCategoryMainPlacesTeleport", function(val)
	if val == "Casual" then
		game:GetService("TeleportService"):Teleport(301549746, LocalPlayer)
		library.pointers.MiscellaneousTabCategoryMainPlacesTeleport:Set("-")
	elseif val == "Competitive" then
		game:GetService("TeleportService"):Teleport(1480424328, LocalPlayer)
		library.pointers.MiscellaneousTabCategoryMainPlacesTeleport:Set("-")
	elseif val == "Deathmatch" then
		game:GetService("TeleportService"):Teleport(1869597719, LocalPlayer)
		library.pointers.MiscellaneousTabCategoryMainPlacesTeleport:Set("-")
	elseif val == "Trading" then
		game:GetService("TeleportService"):Teleport(5325113759, LocalPlayer)
		library.pointers.MiscellaneousTabCategoryMainPlacesTeleport:Set("-")
	end
end)

MiscellaneousTabCategoryMain:AddDropdown("Barriers", {"Normal", "Visible", "Remove"}, "-", "MiscellaneousTabCategoryMainBarriers", function(val)
	pcall(function()
	if val ~= "-" then
		local Clips = workspace.Map.Clips; Clips.Name = "FAT"; Clips.Parent = nil
		local Killers = workspace.Map.Killers; Killers.Name = "FAT"; Killers.Parent = nil

		if val == "Normal" then	
			for i,v in pairs(Clips:GetChildren()) do
				if v:IsA("BasePart") then
					v.Transparency = 1
					v.CanCollide = true
				end
			end
			for i,v in pairs(Killers:GetChildren()) do
				if v:IsA("BasePart") then
					v.Transparency = 1
					v.CanCollide = true
				end
			end
		elseif val == "Visible" then
			for i,v in pairs(Clips:GetChildren()) do
				if v:IsA("BasePart") then
					v.Transparency = 0.9
					v.Material = "Neon"
					v.Color = Color3.fromRGB(255, 0, 255)
				end
			end
			for i,v in pairs(Killers:GetChildren()) do
				if v:IsA("BasePart") then
					v.Transparency = 0.9
					v.Material = "Neon"
					v.Color = Color3.fromRGB(255, 0, 0)
				end
			end
		elseif val == "Remove" then
			for i,v in pairs(Clips:GetChildren()) do
				if v:IsA("BasePart") then
					v:Remove()
				end
			end
			for i,v in pairs(Killers:GetChildren()) do
				if v:IsA("BasePart") then
					v:Remove()
				end
			end
		end

		Killers.Name = "Killers"; Killers.Parent = workspace.Map
		Clips.Name = "Clips"; Clips.Parent = workspace.Map
		
		library.pointers.MiscellaneousTabCategoryMainBarriers:Set("-")
	end
	end)
end)

MiscellaneousTabCategoryMain:AddDropdown("Spawn Item", Weapons, "-", "MiscellaneousTabCategoryMainSpawnItem", function(val)
	if game.ReplicatedStorage.Weapons:FindFirstChild(val) then
		game.ReplicatedStorage.Events.Drop:FireServer(
			game.ReplicatedStorage.Weapons[val],
			LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4),
			game.ReplicatedStorage.Weapons[val].Ammo.Value,
			game.ReplicatedStorage.Weapons[val].StoredAmmo.Value,
			false,
			LocalPlayer,
			false,
			false
		)
		library.pointers.MiscellaneousTabCategoryMainSpawnItem:Set("-")
	end
end)

MiscellaneousTabCategoryMain:AddDropdown("Play Sound", TableToNames(Sounds), "-", "MiscellaneousTabCategoryMainPlaySound", function(val)
	if Sounds[val] ~= nil and Sounds[val]:IsA("Sound") then
		Sounds[val]:Play()
		library.pointers.MiscellaneousTabCategoryMainPlaySound:Set("-")
	end
end)

MiscellaneousTabCategoryMain:AddDropdown("Open Case", Cases, "-", "MiscellaneousTabCategoryMainOpenCase", function(val)
	if game.ReplicatedStorage.Cases:FindFirstChild(val) then
		for i=1,library.pointers.MiscellaneousTabCategoryMainOpenCaseAmount.value do
			game.ReplicatedStorage.Events.DataEvent:FireServer({"BuyCase", val})
		end
		library.pointers.MiscellaneousTabCategoryMainOpenCase:Set("-")
	end
end)

MiscellaneousTabCategoryMain:AddSlider("Open Case Amount", {1, 100, 1, 1, ""}, "MiscellaneousTabCategoryMainOpenCaseAmount")

MiscellaneousTabCategoryMain:AddMultiDropdown("Custom Models", TableToNames(loadstring("return "..readfile("hexagon/custom_models.txt"))(), true), {}, "MiscellaneousTabCategoryMainCustomModels", function(val)
	if not ViewmodelsBackup then
		ViewmodelsBackup = game.ReplicatedStorage.Viewmodels:Clone()
	end
	
	game.ReplicatedStorage.Viewmodels:Destroy()
	
	ViewmodelsBackup:Clone().Parent = game.ReplicatedStorage
	
	for i,v in pairs(loadstring("return "..readfile("hexagon/custom_models.txt"))()) do
		if table.find(val, v.weaponname) then
			AddCustomModel(v)
		end
	end
end)

MiscellaneousTabCategoryMain:AddDropdown("Inventory Changer", TableToNames(Inventories), "-", "MiscellaneousTabCategoryMainInventoryChanger", function(val)
	local InventoryLoadout = LocalPlayer.PlayerGui.GUI["Inventory&Loadout"]
	local InventoriesData = loadstring("return "..readfile("hexagon/inventories.txt"))()
	
	if typeof(InventoriesData[val]) == "table" then
		cbClient.CurrentInventory = InventoriesData[val]
	elseif typeof(InventoriesData[val]) == "string" then
		if InventoriesData[val] == "table_def" then
			cbClient.CurrentInventory = oldInventory
		elseif InventoriesData[val] == "table_cus" then
			cbClient.CurrentInventory = nocw_s
		elseif InventoriesData[val] == "table_all" then
			AllSkinsTable = {}

			for i,v in pairs(game.ReplicatedStorage.Skins:GetChildren()) do
				if v:IsA("Folder") and game.ReplicatedStorage.Weapons:FindFirstChild(v.Name) then
					table.insert(AllSkinsTable, {v.Name.."_Stock"})
					for i,c in pairs(v:GetChildren()) do
						if c.Name ~= "Stock" then
							table.insert(AllSkinsTable, {v.Name.."_"..c.Name})
						end
					end
				end
			end
			
			for i,v in pairs(game.ReplicatedStorage.Gloves:GetChildren()) do
				if v:FindFirstChild("Type") then
					local GloveType = 
						(v.Type.Value == "Straps" and "Strapped Glove") or
						(v.Type.Value == "Wraps" and "Handwraps") or
						(v.Type.Value == "Sports" and "Sports Glove") or
						(v.Type.Value == "Fingerless" and "Fingerless Glove")
						
					if GloveType then
						table.insert(AllSkinsTable, {GloveType.."_"..v.Name})
					end
				end
			end

			cbClient.CurrentInventory = AllSkinsTable
		end
	end
	
	if InventoryLoadout.Visible == true then
		InventoryLoadout.Visible = false
		InventoryLoadout.Visible = true
	end
	
	pcall(function()
		library.pointers.MiscellaneousTabCategoryMainInventoryChanger:Refresh(TableToNames(Inventories))
	end)
end)

MiscellaneousTabCategoryMain:AddButton("Inject Custom Skins", function()
	if #nocw_s == 0 then
		for i,v in pairs(loadstring("return "..readfile("hexagon/custom_skins.txt"))()) do
			AddCustomSkin(v)
			game:GetService("RunService").Stepped:Wait()
		end
	end
end)

MiscellaneousTabCategoryMain:AddButton("Crash Server", function()
	if LocalPlayer.Character then
		game:GetService("RunService").RenderStepped:Connect(function()
			game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(game:GetService("ReplicatedStorage").Weapons["Molotov"].Model, nil, 25, 35, Vector3.new(0,-100,0), nil, nil)
			game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(game:GetService("ReplicatedStorage").Weapons["HE Grenade"].Model, nil, 25, 35, Vector3.new(0,-100,0), nil, nil)
			game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(game:GetService("ReplicatedStorage").Weapons["Decoy Grenade"].Model, nil, 25, 35, Vector3.new(0,-100,0), nil, nil)
			game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(game:GetService("ReplicatedStorage").Weapons["Smoke Grenade"].Model, nil, 25, 35, Vector3.new(0,-100,0), nil, nil)
			game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(game:GetService("ReplicatedStorage").Weapons["Flashbang"].Model, nil, 25, 35, Vector3.new(0,-100,0), nil, nil)
		end)
	end
end)

MiscellaneousTabCategoryMain:AddButton("Inf HP", function() pcall(function()
	game.ReplicatedStorage.Events.FallDamage:FireServer(0/0)
	LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
		LocalPlayer.Character.Humanoid.Health = 100
	end)
end) end)

MiscellaneousTabCategoryMain:AddButton("FE God", function() pcall(function()
	LocalPlayer.Character.Humanoid.Parent = nil
	Instance.new("Humanoid", LocalPlayer.Character)
end) end)

MiscellaneousTabCategoryMain:AddButton("Invisibility [dont defuse]", function() pcall(function()
	local oldpos = LocalPlayer.Character.HumanoidRootPart.CFrame
	LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9999,9999,9999)
	local NewRoot = LocalPlayer.Character.LowerTorso.Root:Clone()
	LocalPlayer.Character.LowerTorso.Root:Destroy()
	NewRoot.Parent = LocalPlayer.Character.LowerTorso
	wait()
	LocalPlayer.Character.HumanoidRootPart.CFrame = oldpos
end) end)

MiscellaneousTabCategoryMain:AddButton("Vote Kick Yourself", function()
	game.ReplicatedStorage.Events.Vote:FireServer(game.Players.LocalPlayer.Name)
end)

MiscellaneousTabCategoryMain:AddToggle("Anti Vote Kick", false, "MiscellaneousTabCategoryMainAntiVoteKick")

MiscellaneousTabCategoryMain:AddToggle("Anti Spectators", false, "MiscellaneousTabCategoryMainAntiSpectators")

MiscellaneousTabCategoryMain:AddToggle("Unlock Reset Character", false, "MiscellaneousTabCategoryMainUnlockResetCharacter", function(val)
	game:GetService("StarterGui"):SetCore("ResetButtonCallback", val)
end)

MiscellaneousTabCategoryMain:AddToggle("Unlock Shop While Alive", false, "MiscellaneousTabCategoryMainUnlockShopWhileAlive")

MiscellaneousTabCategoryMain:AddToggle("Show Spectators", false, "MiscellaneousTabCategoryMainShowSpectators", function(val)
	ShowSpectators = val
	
	library.base.Spectators.Visible = val
	
	while ShowSpectators do
		for i,v in pairs(library.base.Spectators.SpectatorsFrame:GetChildren()) do
			if v:IsA("TextLabel") then
				v:Destroy()
			end
		end
		
		for i,v in pairs(GetSpectators()) do
			local SpectatorLabel = Instance.new("TextLabel")
			SpectatorLabel.BackgroundTransparency = 1
			SpectatorLabel.Size = UDim2.new(1, 0, 0, 18)
			SpectatorLabel.Text = v.Name
			SpectatorLabel.TextColor3 = Color3.new(1, 1, 1)
			SpectatorLabel.Parent = library.base.Spectators.SpectatorsFrame
		end
		
		wait(0.25)
	end
end)

MiscellaneousTabCategoryMain:AddToggle("Inf Jump", false, "MiscellaneousTabCategoryMainInfJump", function(val)
	if val == true then
		JumpHook = game:GetService("UserInputService").JumpRequest:connect(function()
			game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping") 
		end)
	elseif val == false and JumpHook then
		JumpHook:Disconnect()
	end
end)

MiscellaneousTabCategoryMain:AddToggle("Inf Cash", false, "MiscellaneousTabCategoryMainInfCash", function(val)
	if val == true then
		LocalPlayer.Cash.Value = 16000
		CashHook = LocalPlayer.Cash:GetPropertyChangedSignal("Value"):connect(function()
			LocalPlayer.Cash.Value = 16000
		end)
	elseif val == false and CashHook then
		CashHook:Disconnect()
	end
end)

MiscellaneousTabCategoryMain:AddToggle("Inf Stamina", false, "MiscellaneousTabCategoryMainInfStamina", function(val)
	if val == true then
		game:GetService("RunService"):BindToRenderStep("Stamina", 100, function()
			if cbClient.crouchcooldown ~= 0 then
				cbClient.crouchcooldown = 0
			end
		end)
	elseif val == false  then
		game:GetService("RunService"):UnbindFromRenderStep("Stamina")
	end
end)

MiscellaneousTabCategoryMain:AddToggle("NNS Dont Talk", false, "MiscellaneousTabCategoryMainNNSDontTalk")

MiscellaneousTabCategoryMain:AddToggle("No Chat Filter", false, "MiscellaneousTabCategoryMainNoChatFilter")

MiscellaneousTabCategoryMain:AddToggle("No Fall Damage", false, "MiscellaneousTabCategoryMainNoFallDamage")

MiscellaneousTabCategoryMain:AddToggle("No Fire Damage", false, "MiscellaneousTabCategoryMainNoFireDamage")

MiscellaneousTabCategoryMain:AddToggle("Kill All", false, "MiscellaneousTabCategoryMainKillAll", function(val)
	if val == true then
		KillAllLoop = game:GetService("RunService").RenderStepped:Connect(function()
			wait()
			pcall(function()
				for i,v in pairs(game.Players:GetChildren()) do
					if v ~= LocalPlayer and IsAlive(v) and IsAlive(LocalPlayer) then
						local Arguments = {
							[1] = v.Character.Head,
							[2] = v.Character.Head.Position,
							[3] = "Banana",
							[4] = 100,
							[5] = LocalPlayer.Character.Gun,
							[8] = 100,
							[9] = false,
							[10] = false,
							[11] = Vector3.new(),
							[12] = 100,
							[13] = Vector3.new()
						}
						game.ReplicatedStorage.Events.HitPart:FireServer(unpack(Arguments))
					end
				end
			end)
		end)
	elseif val == false and KillAllLoop then
		KillAllLoop:Disconnect()
	end
end)

MiscellaneousTabCategoryMain:AddToggle("Kill Enemies", false, "MiscellaneousTabCategoryMainKillEnemies", function(val)
	if val == true then
		KillEnemiesLoop = game:GetService("RunService").RenderStepped:Connect(function()
			pcall(function()
				for i,v in pairs(game.Players:GetChildren()) do
					if v ~= LocalPlayer and IsAlive(v) and IsAlive(LocalPlayer) and GetTeam(v) ~= GetTeam(LocalPlayer) then
						local Arguments = {
							[1] = v.Character.Head,
							[2] = v.Character.Head.Position,
							[3] = "Banana",
							[4] = 100,
							[5] = LocalPlayer.Character.Gun,
							[8] = 100,
							[9] = false,
							[10] = false,
							[11] = Vector3.new(),
							[12] = 100,
							[13] = Vector3.new()
						}
						game.ReplicatedStorage.Events.HitPart:FireServer(unpack(Arguments))
					end
				end
			end)
		end)
	elseif val == false and KillEnemiesLoop then
		KillEnemiesLoop:Disconnect()
	end
end)

MiscellaneousTabCategoryMain:AddTextBox("Hit Sound", "", "MiscellaneousTabCategoryMainHitSound")

MiscellaneousTabCategoryMain:AddTextBox("Kill Sound", "", "MiscellaneousTabCategoryMainKillSound")

MiscellaneousTabCategoryMain:AddKeybind("Airstuck", nil, "MiscellaneousTabCategoryMainAirStuck", function(val)
	if IsAlive(LocalPlayer) and UserInputService:GetFocusedTextBox() == nil then
		for i,v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = val
			end
		end
	end
end)

MiscellaneousTabCategoryMain:AddKeybind("Teleport", nil, "MiscellaneousTabCategoryMainTeleport", function(val)
	if val == true and IsAlive(LocalPlayer) and UserInputService:GetFocusedTextBox() == nil and Mouse.Target ~= nil then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.p + Vector3.new(0, 2.5, 0))
	end
end)

local MiscellaneousTabCategoryNoclip = MiscellaneousTab:AddCategory("Noclip", 1)

MiscellaneousTabCategoryNoclip:AddToggle("Enabled", false, "MiscellaneousTabCategoryNoclipEnabled", function(val)
	if val == true then
		FlyLoop = game:GetService("RunService").Stepped:Connect(function()
			if IsAlive(LocalPlayer) then
				spawn(function()
					pcall(function()
						local speed = library.pointers.MiscellaneousTabCategoryNoclipSpeed.value
						local velocity = Vector3.new(0, 1, 0)
						
						if UserInputService:IsKeyDown(Enum.KeyCode.W) then
							velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.lookVector * speed)
						end
						if UserInputService:IsKeyDown(Enum.KeyCode.A) then
							velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.rightVector * -speed)
						end
						if UserInputService:IsKeyDown(Enum.KeyCode.S) then
							velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.lookVector * -speed)
						end
						if UserInputService:IsKeyDown(Enum.KeyCode.D) then
							velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.rightVector * speed)
						end
						
						LocalPlayer.Character.HumanoidRootPart.Velocity = velocity
						LocalPlayer.Character.Humanoid.PlatformStand = true
					end)
				end)
			end
		end)
		
		NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
			for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("BasePart") and v.CanCollide == true then
					v.CanCollide = false
				end
			end
		end)
	elseif val == false and FlyLoop and NoclipLoop then
		pcall(function()
			FlyLoop:Disconnect()
			NoclipLoop:Disconnect()
			LocalPlayer.Character.Humanoid.PlatformStand = false
		end)
	end
end)

MiscellaneousTabCategoryNoclip:AddKeybind("Keybind", nil, "MiscellaneousTabCategoryNoclipKeybind", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then
		library.pointers.MiscellaneousTabCategoryNoclipEnabled:Set(not library.pointers.MiscellaneousTabCategoryNoclipEnabled.value)
	end
end)

MiscellaneousTabCategoryNoclip:AddSlider("Speed", {0, 100, 16, 1, ""}, "MiscellaneousTabCategoryNoclipSpeed")

local MiscellaneousTabCategoryGunMods = MiscellaneousTab:AddCategory("Gun Mods", 2)

MiscellaneousTabCategoryGunMods:AddSlider("Damage Multiplier", {0, 100, 1, 0.01, "x"}, "MiscellaneousTabCategoryGunModsDamageMultiplier")

MiscellaneousTabCategoryGunMods:AddToggle("Wallbang", false, "MiscellaneousTabCategoryGunModsWallbang")

MiscellaneousTabCategoryGunMods:AddToggle("No Recoil", false, "MiscellaneousTabCategoryGunModsNoRecoil", function(val)
	if val == true then
		game:GetService("RunService"):BindToRenderStep("NoRecoil", 100, function()
			cbClient.resetaccuracy()
			cbClient.RecoilX = 0
			cbClient.RecoilY = 0
		end)
	elseif val == false then
		game:GetService("RunService"):UnbindFromRenderStep("NoRecoil")
	end
end)

MiscellaneousTabCategoryGunMods:AddToggle("No Spread", false, "MiscellaneousTabCategoryGunModsNoSpread")

MiscellaneousTabCategoryGunMods:AddToggle("Rapid Fire", false, "MiscellaneousTabCategoryGunModsRapidFire")

MiscellaneousTabCategoryGunMods:AddToggle("Full Auto", false, "MiscellaneousTabCategoryGunModsFullAuto")

MiscellaneousTabCategoryGunMods:AddToggle("Instant Reload", false, "MiscellaneousTabCategoryGunModsInstantReload")

MiscellaneousTabCategoryGunMods:AddToggle("Instant Equip", false, "MiscellaneousTabCategoryGunModsInstantEquip")

MiscellaneousTabCategoryGunMods:AddToggle("Infinite Ammo", false, "MiscellaneousTabCategoryGunModsInfiniteAmmo")

MiscellaneousTabCategoryGunMods:AddToggle("Infinite Range", false, "MiscellaneousTabCategoryGunModsInfiniteRange")

MiscellaneousTabCategoryGunMods:AddToggle("Infinite Penetration", false, "MiscellaneousTabCategoryGunModsInfinitePenetration")

-- MiscellaneousTabCategoryGunMods:AddSlider("Recoil", {0, 100, 100, 1, "%"}, "MiscellaneousTabCategoryGunModsRecoil")

MiscellaneousTabCategoryGunMods:AddDropdown("Plant", {"Normal", "Instant", "Anywhere"}, "Normal", "MiscellaneousTabCategoryGunModsPlant")

MiscellaneousTabCategoryGunMods:AddDropdown("Defuse", {"Normal", "Instant", "Anywhere"}, "Normal", "MiscellaneousTabCategoryGunModsDefuse")

MiscellaneousTabCategoryGunMods:AddButton("Plant C4", PlantC4)

MiscellaneousTabCategoryGunMods:AddButton("Defuse C4", DefuseC4)

local MiscellaneousTabCategoryBunnyHop = MiscellaneousTab:AddCategory("Bunny Hop", 2)

MiscellaneousTabCategoryBunnyHop:AddToggle("Enabled", false, "MiscellaneousTabCategoryBunnyHopEnabled")

MiscellaneousTabCategoryBunnyHop:AddSlider("Acceleration", {0, 100, 3, 1, ""}, "MiscellaneousTabCategoryBunnyHopAcceleration")

MiscellaneousTabCategoryBunnyHop:AddSlider("Minimum Velocity", {0, 100, 16, 1, ""}, "MiscellaneousTabCategoryBunnyHopMinVelocity")

MiscellaneousTabCategoryBunnyHop:AddSlider("Maximum Velocity", {0, 100, 40, 1, ""}, "MiscellaneousTabCategoryBunnyHopMaxVelocity")

local MiscellaneousTabCategoryBacktrack = MiscellaneousTab:AddCategory("Backtrack", 2)

MiscellaneousTabCategoryBacktrack:AddToggle("Enabled", false, "MiscellaneousTabCategoryBacktrackEnabled", function(val)
	if val == true then
		local Backtracking = RunService.RenderStepped:Connect(function()
			if IsAlive(LocalPlayer) then
				for i,v in pairs(game.Players:GetPlayers()) do
					if IsAlive(v) and GetTeam(v) ~= GetTeam(LocalPlayer) then
						local NewBacktrackPart = Instance.new("Part")
						NewBacktrackPart.Name = v.Name
						NewBacktrackPart.Anchored = true
						NewBacktrackPart.CanCollide = false
						NewBacktrackPart.Transparency = library.pointers.MiscellaneousTabCategoryBacktrackTransparency.value
						NewBacktrackPart.Color = library.pointers.MiscellaneousTabCategoryBacktrackColor.value
						NewBacktrackPart.Size = v.Character.Head.Size
						NewBacktrackPart.CFrame = v.Character.Head.CFrame
						NewBacktrackPart.Parent = HexagonFolder
						
						local BacktrackTag = Instance.new("ObjectValue")
						BacktrackTag.Parent = NewBacktrackPart
						BacktrackTag.Name = "PlayerName"
						BacktrackTag.Value = v
						
						spawn(function()
							wait(library.pointers.MiscellaneousTabCategoryBacktrackTime.value/1000)
							NewBacktrackPart:Destroy()
						end)
					end
				end
			end
		end)
	elseif val == false and Backtracking then
		Backtracking:Disconnect()
	end
end)

MiscellaneousTabCategoryBacktrack:AddSlider("Time", {0, 1000, 200, 1, "ms"}, "MiscellaneousTabCategoryBacktrackTime")

MiscellaneousTabCategoryBacktrack:AddSlider("Transparency", {0, 1, 0, 0.01, ""}, "MiscellaneousTabCategoryBacktrackTransparency")

MiscellaneousTabCategoryBacktrack:AddColorPicker("Color", Color3.new(1,1,1), "MiscellaneousTabCategoryBacktrackColor")

local MiscellaneousTabCategoryGrenade = MiscellaneousTab:AddCategory("Grenade", 2)

MiscellaneousTabCategoryGrenade:AddKeybind("Keybind", nil, "MiscellaneousTabCategoryGrenadeKeybind", function(val)
	if val == true and UserInputService:GetFocusedTextBox() == nil then
		game:GetService("ReplicatedStorage").Events.ThrowGrenade:FireServer(
			game.ReplicatedStorage.Weapons[library.pointers.MiscellaneousTabCategoryGrenadeType.value].Model,
			nil,
			25,
			35,
			(game.Players.LocalPlayer:GetMouse().Hit.Position - game.Players.LocalPlayer.Character.Head.Position) * library.pointers.MiscellaneousTabCategoryGrenadeVelocity.value,
			nil,
			nil
		)
	end
end)

MiscellaneousTabCategoryGrenade:AddSlider("Velocity", {0, 100, 10, 1, ""}, "MiscellaneousTabCategoryGrenadeVelocity")

MiscellaneousTabCategoryGrenade:AddDropdown("Type", {"Molotov","HE Grenade","Decoy Grenade","Smoke Grenade","Incendiary Grenade","Flashbang"}, "Molotov", "MiscellaneousTabCategoryGrenadeType")

local MiscellaneousTabCategoryChatSpam = MiscellaneousTab:AddCategory("Chat Spam", 2)

MiscellaneousTabCategoryChatSpam:AddToggle("Enabled", false, "MiscellaneousTabCategoryChatSpamEnabled", function(val)
	if val == true then
		ChatSpam = true
	elseif val == false then
		ChatSpam = false
	end
	
	while ChatSpam do
		game:GetService("ReplicatedStorage").Events.PlayerChatted:FireServer(
			library.pointers.MiscellaneousTabCategoryChatSpamMessage.value,
			false,
			"Innocent",
			false,
			true
		)
		wait(3)
	end
end)

MiscellaneousTabCategoryChatSpam:AddTextBox("Message", "Hexagon is the best!", "MiscellaneousTabCategoryChatSpamMessage")



local SettingsTab = Window:CreateTab("Settings")

local SettingsTabCategoryMain = SettingsTab:AddCategory("Main", 1)

SettingsTabCategoryMain:AddKeybind("Toggle Keybind", Enum.KeyCode.RightShift, "SettingsTabCategoryUIToggleKeybind")

SettingsTabCategoryMain:AddButton("Server Rejoin", function()
    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
end)

SettingsTabCategoryMain:AddButton("Copy Discord Invite", function()
	setclipboard("https://discord.gg/47YH2Ay")
end)

SettingsTabCategoryMain:AddButton("Copy Join Command", function()
	setclipboard("Roblox.GameLauncher.joinGameInstance("..game.PlaceId..", '"..game.JobId.."')")
end)

SettingsTabCategoryMain:AddButton("Fix Vote Bug", function()
    LocalPlayer.PlayerGui.GUI.MapVote.Visible = false
	LocalPlayer.PlayerGui.GUI.Scoreboard.Visible = false
end)

SettingsTabCategoryMain:AddTextBox("Clantag", "", "SettingsTabCategoryMainClantag", function(val, focus)
	if val == "" then
		game.Players.LocalPlayer.OsPlatform = oldOsPlatform
	else
		while library.pointers.SettingsTabCategoryMainClantag.value == val do
			for i=1,#val do
				game.Players.LocalPlayer.OsPlatform = "|"..val:sub(1,i)
				wait(0.25)
			end
			wait(1)
			for i=1,4 do
				game.Players.LocalPlayer.OsPlatform = "|"..val
				wait(0.15)
				game.Players.LocalPlayer.OsPlatform = "|"..string.rep("*", #val)
				wait(0.15)
			end
			wait(0.5)
			game.Players.LocalPlayer.OsPlatform = "|"
			wait(0.5)
		end
	end
end)

local SettingsTabCategoryPlayers = SettingsTab:AddCategory("Players", 1)

SettingsTabCategoryPlayers:AddTextBox("Username", "", "SettingsTabCategoryPlayersUsername", function(val, focus)
	if game.Players:FindFirstChild(val) then
		local plr = game.Players:FindFirstChild(val)
		
		while game.Players:FindFirstChild(library.pointers.SettingsTabCategoryPlayersUsername.value) do
			wait(0.1)
			library.pointers.SettingsTabCategoryPlayersAge:Set("Age: "..plr.AccountAge)
			library.pointers.SettingsTabCategoryPlayersAlive:Set("Alive: "..(IsAlive(plr) and "yes" or "nu"))
		end
		
		library.pointers.SettingsTabCategoryPlayersAge:Set("Age: ")
		library.pointers.SettingsTabCategoryPlayersAlive:Set("Alive: ")
	end
end)

SettingsTabCategoryPlayers:AddLabel("Age: ", "SettingsTabCategoryPlayersAge")

SettingsTabCategoryPlayers:AddLabel("Alive: ", "SettingsTabCategoryPlayersAlive")

local SettingsTabCategoryConfigs = SettingsTab:AddCategory("Configs", 2)

SettingsTabCategoryConfigs:AddTextBox("Name", "", "SettingsTabCategoryConfigsName")

SettingsTabCategoryConfigs:AddDropdown("Config", {"-"}, "-", "SettingsTabCategoryConfigsConfig")

SettingsTabCategoryConfigs:AddButton("Create", function()
    writefile("hexagon/configs/"..library.pointers.SettingsTabCategoryConfigsName.value..".cfg", library:SaveConfiguration())
end)

SettingsTabCategoryConfigs:AddButton("Save", function()
    writefile("hexagon/configs/"..library.pointers.SettingsTabCategoryConfigsConfig.value..".cfg", library:SaveConfiguration())
end)

SettingsTabCategoryConfigs:AddButton("Load", function()
	local a,b = pcall(function()
		cfg = loadstring("return "..readfile("hexagon/configs/"..library.pointers.SettingsTabCategoryConfigsConfig.value..".cfg"))()
	end)
	
	if a == false then
		warn("Config Loading Error", a, b)
	elseif a == true then
		library:LoadConfiguration(cfg)
	end
end)

SettingsTabCategoryConfigs:AddButton("Refresh", function()
	local cfgs = {}

	for i,v in pairs(listdir("hexagon/configs")) do
		if v:sub(-4) == ".cfg" then
			table.insert(cfgs, v:sub(17, -5))
		end
	end
	
	library.pointers.SettingsTabCategoryConfigsConfig.options = cfgs
end)

local SettingsTabCategoryCredits = SettingsTab:AddCategory("Credits", 2)

SettingsTabCategoryCredits:AddLabel("Script - Pawel12d#0272")

SettingsTabCategoryCredits:AddLabel("ESP - Modified Kiriot ESP")

SettingsTabCategoryCredits:AddLabel("UI Library - Modified Phantom Ware")

SettingsTabCategoryCredits:AddLabel("")

SettingsTabCategoryCredits:AddLabel("Special Thanks To:")

SettingsTabCategoryCredits:AddLabel("ny#2817")

SettingsTabCategoryCredits:AddLabel("neeX#3712")

SettingsTabCategoryCredits:AddLabel("MrPolaczekPL#1884")

SettingsTabCategoryCredits:AddLabel("")

SettingsTabCategoryCredits:AddLabel("Don't steal credits or burn in hell.")



-- Other
game.Players.LocalPlayer.Additionals.TotalDamage.Changed:Connect(function(val)
	if library.pointers.MiscellaneousTabCategoryMainHitSound.value ~= "" and val ~= 0 then
		local marker = Instance.new("Sound")
		marker.Parent = game:GetService("SoundService")
		marker.SoundId = "rbxassetid://"..library.pointers.MiscellaneousTabCategoryMainHitSound.value
		marker.Volume = 3
		marker:Play()
	end
end)

game.Players.LocalPlayer.Status.Kills.Changed:Connect(function(val)
	if library.pointers.MiscellaneousTabCategoryMainKillSound.value ~= "" and val ~= 0 then
		local marker = Instance.new("Sound")
		marker.Parent = game:GetService("SoundService")
		marker.SoundId = "rbxassetid://"..library.pointers.MiscellaneousTabCategoryMainKillSound.value
		marker.Volume = 3
		marker:Play()
	end
end)

workspace.CurrentCamera.ChildAdded:Connect(function(new)
	spawn(function()
	if new.Name == "Arms" and new:IsA("Model") and library.pointers.VisualsTabCategoryViewmodelColorsEnabled.value == true then
		for i,v in pairs(new:GetChildren()) do
			if v:IsA("Model") and v:FindFirstChild("Right Arm") or v:FindFirstChild("Left Arm") then
				local RightArm = v:FindFirstChild("Right Arm") or nil
				local LeftArm = v:FindFirstChild("Left Arm") or nil
					
				local RightGlove = (RightArm and (RightArm:FindFirstChild("Glove") or RightArm:FindFirstChild("RGlove"))) or nil
				local LeftGlove = (LeftArm and (LeftArm:FindFirstChild("Glove") or LeftArm:FindFirstChild("LGlove"))) or nil
					
				local RightSleeve = RightArm and RightArm:FindFirstChild("Sleeve") or nil
				local LeftSleeve = LeftArm and LeftArm:FindFirstChild("Sleeve") or nil
				
				if library.pointers.VisualsTabCategoryViewmodelColorsArms.value == true then
					if RightArm ~= nil then
						RightArm.Mesh.TextureId = ""
						RightArm.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsArmsTransparency.value
						RightArm.Color = library.pointers.VisualsTabCategoryViewmodelColorsArmsColor.value
					end
					if LeftArm ~= nil then
						LeftArm.Mesh.TextureId = ""
						LeftArm.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsArmsTransparency.value
						LeftArm.Color = library.pointers.VisualsTabCategoryViewmodelColorsArmsColor.value
					end
				end
				
				if library.pointers.VisualsTabCategoryViewmodelColorsGloves.value == true then
					if RightGlove ~= nil then
						RightGlove.Mesh.TextureId = ""
						RightGlove.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsGlovesTransparency.value
						RightGlove.Color = library.pointers.VisualsTabCategoryViewmodelColorsGlovesColor.value
					end
					if LeftGlove ~= nil then
						LeftGlove.Mesh.TextureId = ""
						LeftGlove.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsGlovesTransparency.value
						LeftGlove.Color = library.pointers.VisualsTabCategoryViewmodelColorsGlovesColor.value
					end
				end

				if library.pointers.VisualsTabCategoryViewmodelColorsSleeves.value == true then
					if RightSleeve ~= nil then
						RightSleeve.Mesh.TextureId = ""
						RightSleeve.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsSleevesTransparency.value
						RightSleeve.Color = library.pointers.VisualsTabCategoryViewmodelColorsSleevesColor.value
						RightSleeve.Material = "ForceField"
					end
					if LeftSleeve ~= nil then
						LeftSleeve.Mesh.TextureId = ""
						LeftSleeve.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsSleevesTransparency.value
						LeftSleeve.Color = library.pointers.VisualsTabCategoryViewmodelColorsSleevesColor.value
						LeftSleeve.Material = "ForceField"
					end
				end
			elseif library.pointers.VisualsTabCategoryViewmodelColorsWeapons.value == true and v:IsA("BasePart") and v.Name ~= ("Right Arm" or "Left Arm" or "Flash") and v.Transparency ~= 1 then
				if v:IsA("MeshPart") then v.TextureID = "" end
				if v:FindFirstChildOfClass("SpecialMesh") then v:FindFirstChildOfClass("SpecialMesh").TextureId = "" end

				v.Transparency = library.pointers.VisualsTabCategoryViewmodelColorsWeaponsTransparency.value
				v.Color = library.pointers.VisualsTabCategoryViewmodelColorsWeaponsColor.value
				v.Material = library.pointers.VisualsTabCategoryViewmodelColorsWeaponsMaterial.value
			end
		end
	end
	end)
end)

workspace.ChildAdded:Connect(function(new)
	if new.Name == "C4" and new:IsA("Model") and library.pointers.VisualsTabCategoryBombESPEnabled.value == true then
		local BombTimer = 40
		
		local BillboardGui = Instance.new("BillboardGui")
		BillboardGui.Parent = new
		BillboardGui.Adornee = new
		BillboardGui.Active = true
		BillboardGui.AlwaysOnTop = true
		BillboardGui.LightInfluence = 1
		BillboardGui.Size = UDim2.new(0, 50, 0, 50)
		
		if table.find(library.pointers.VisualsTabCategoryBombESPInfo.value, "Text") then
			local TextLabelText = Instance.new("TextLabel")
			TextLabelText.Parent = BillboardGui
			TextLabelText.ZIndex = 2
			TextLabelText.BackgroundTransparency = 1
			TextLabelText.Size = UDim2.new(1, 0, 1, 0)
			TextLabelText.Font = Enum.Font.SourceSansBold
			TextLabelText.TextColor3 = library.pointers.VisualsTabCategoryBombESPColor.value
			TextLabelText.TextSize = 14
			TextLabelText.TextYAlignment = Enum.TextYAlignment.Top
			TextLabelText.Text = tostring(new.Name)
		end
		
		if table.find(library.pointers.VisualsTabCategoryBombESPInfo.value, "Icon") then
			local ImageLabel = Instance.new("ImageLabel")
			ImageLabel.Parent = BillboardGui
			ImageLabel.ZIndex = 1
			ImageLabel.BackgroundTransparency = 1
			ImageLabel.Size = UDim2.new(1, 0, 1, 0)
			ImageLabel.ImageColor3 = library.pointers.VisualsTabCategoryBombESPColor.value
			ImageLabel.Image = tostring(require(game.ReplicatedStorage.GetIcon).getWeaponOfKiller(new.Name))
			ImageLabel.ScaleType = Enum.ScaleType.Fit
		end
		
		if table.find(library.pointers.VisualsTabCategoryBombESPInfo.value, "Timer") then
			local TextLabelBombTimer = Instance.new("TextLabel")
			TextLabelBombTimer.Parent = BillboardGui
			TextLabelBombTimer.ZIndex = 2
			TextLabelBombTimer.BackgroundTransparency = 1
			TextLabelBombTimer.Size = UDim2.new(1, 0, 1, 0)
			TextLabelBombTimer.Font = Enum.Font.SourceSansBold
			TextLabelBombTimer.TextColor3 = library.pointers.VisualsTabCategoryBombESPColor.value
			TextLabelBombTimer.TextSize = 14
			TextLabelBombTimer.TextYAlignment = Enum.TextYAlignment.Bottom
			TextLabelBombTimer.Text = tostring(BombTimer.. "/40")
			
			spawn(function()
				repeat
					wait(1)
					BombTimer = BombTimer - 1
					TextLabelBombTimer.Text = tostring(BombTimer.. "/40")
				until BombTimer == 0 or workspace.Status.RoundOver.Value == true
			end)
		end
	end
end)

LocalPlayer.CharacterAdded:Connect(CharacterAdded)

workspace.Ray_Ignore.Smokes.ChildAdded:Connect(function(child)
	if child.Name == "Smoke" and table.find(library.pointers.VisualsTabCategoryOthersRemoveEffects.value, "Smoke") then
		wait()
		child:Remove()
	end
end)

workspace.Debris.ChildAdded:Connect(function(child)
	if child:IsA("BasePart") and game.ReplicatedStorage.Weapons:FindFirstChild(child.Name) and library.pointers.VisualsTabCategoryDroppedESPEnabled.value == true then
		wait()
		
		local BillboardGui = Instance.new("BillboardGui")
		BillboardGui.Parent = child
		BillboardGui.Adornee = child
		BillboardGui.Active = true
		BillboardGui.AlwaysOnTop = true
		BillboardGui.LightInfluence = 1
		BillboardGui.Size = UDim2.new(0, 50, 0, 50)
		
		if table.find(library.pointers.VisualsTabCategoryDroppedESPInfo.value, "Icon") then
			local ImageLabel = Instance.new("ImageLabel")
			ImageLabel.Parent = BillboardGui
			ImageLabel.ZIndex = 1
			ImageLabel.BackgroundTransparency = 1
			ImageLabel.Size = UDim2.new(1, 0, 1, 0)
			ImageLabel.ImageColor3 = library.pointers.VisualsTabCategoryDroppedESPColor.value
			ImageLabel.Image = tostring(require(game.ReplicatedStorage.GetIcon).getWeaponOfKiller(child.Name))
			ImageLabel.ScaleType = Enum.ScaleType.Fit
		end
		
		if table.find(library.pointers.VisualsTabCategoryDroppedESPInfo.value, "Text") then
			local TextLabelText = Instance.new("TextLabel")
			TextLabelText.Parent = BillboardGui
			TextLabelText.ZIndex = 2
			TextLabelText.BackgroundTransparency = 1
			TextLabelText.Size = UDim2.new(1, 0, 1, 0)
			TextLabelText.Font = Enum.Font.SourceSansBold
			TextLabelText.TextColor3 = library.pointers.VisualsTabCategoryDroppedESPColor.value
			TextLabelText.TextSize = 14
			TextLabelText.TextYAlignment = Enum.TextYAlignment.Top
			TextLabelText.Text = tostring(child.Name)
		end
		
		if table.find(library.pointers.VisualsTabCategoryDroppedESPInfo.value, "Ammo") and game.ReplicatedStorage.Weapons[child.Name].StoredAmmo.Value ~= 0 then
			local TextLabelAmmo = Instance.new("TextLabel")
			TextLabelAmmo.Parent = BillboardGui
			TextLabelAmmo.ZIndex = 2
			TextLabelAmmo.BackgroundTransparency = 1
			TextLabelAmmo.Size = UDim2.new(1, 0, 1, 0)
			TextLabelAmmo.Font = Enum.Font.SourceSansBold
			TextLabelAmmo.TextColor3 = library.pointers.VisualsTabCategoryDroppedESPColor.value
			TextLabelAmmo.TextSize = 14
			TextLabelAmmo.TextYAlignment = Enum.TextYAlignment.Bottom
			TextLabelAmmo.Text = tostring(child:WaitForChild("Ammo").Value.. "/" ..child:WaitForChild("StoredAmmo").Value)
		end
	elseif child:IsA("MeshPart") and not game.ReplicatedStorage.Weapons:FindFirstChild(child.Name) and child:WaitForChild("Handle2") and library.pointers.VisualsTabCategoryGrenadeESPEnabled.value == true then
		wait()
		
		gtype = nil
		
		if child.Handle2.TextureID == game.ReplicatedStorage.Weapons["HE Grenade"].Model.Handle2.TextureID then
			gtype = "HE Grenade"
		elseif child.Handle2.TextureID == game.ReplicatedStorage.Weapons["Smoke Grenade"].Model.Handle2.TextureID then
			gtype = "Smoke Grenade"
		elseif child.Handle2.TextureID == game.ReplicatedStorage.Weapons["Incendiary Grenade"].Model.Handle2.TextureID then
			gtype = "Incendiary Grenade"
		elseif child.Handle2.TextureID == game.ReplicatedStorage.Weapons["Molotov"].Model.Handle2.TextureID then
			gtype = "Molotov"
		elseif child.Handle2.TextureID == game.ReplicatedStorage.Weapons["Flashbang"].Model.Handle2.TextureID then
			gtype = "Flashbang"
		elseif child.Handle2.TextureID == game.ReplicatedStorage.Weapons["Decoy Grenade"].Model.Handle2.TextureID then
			gtype = "Decoy Grenade"
		end
		
		if gtype ~= nil then
			local BillboardGui = Instance.new("BillboardGui")
			BillboardGui.Parent = child
			BillboardGui.Adornee = child
			BillboardGui.Active = true
			BillboardGui.AlwaysOnTop = true
			BillboardGui.LightInfluence = 1
			BillboardGui.Size = UDim2.new(0, 50, 0, 50)
			
			if table.find(library.pointers.VisualsTabCategoryGrenadeESPInfo.value, "Icon") then
				local ImageLabel = Instance.new("ImageLabel")
				ImageLabel.Parent = BillboardGui
				ImageLabel.ZIndex = 1
				ImageLabel.BackgroundTransparency = 1
				ImageLabel.Size = UDim2.new(1, 0, 1, 0)
				ImageLabel.ImageColor3 = library.pointers.VisualsTabCategoryGrenadeESPColor.value
				ImageLabel.Image = tostring(require(game.ReplicatedStorage.GetIcon).getWeaponOfKiller(gtype))
				ImageLabel.ScaleType = Enum.ScaleType.Fit
			end
			
			if table.find(library.pointers.VisualsTabCategoryGrenadeESPInfo.value, "Text") then
				local TextLabelText = Instance.new("TextLabel")
				TextLabelText.Parent = BillboardGui
				TextLabelText.ZIndex = 2
				TextLabelText.BackgroundTransparency = 1
				TextLabelText.Size = UDim2.new(1, 0, 1, 0)
				TextLabelText.Font = Enum.Font.SourceSansBold
				TextLabelText.TextColor3 = library.pointers.VisualsTabCategoryGrenadeESPColor.value
				TextLabelText.TextSize = 14
				TextLabelText.TextYAlignment = Enum.TextYAlignment.Top
				TextLabelText.Text = tostring(gtype)
			end
		end
	elseif child.Name == "Bullet" and table.find(library.pointers.VisualsTabCategoryOthersRemoveEffects.value, "Bullet Holes") then
		wait()
		child:Remove()
	elseif child.Name == "SurfaceGui" and table.find(library.pointers.VisualsTabCategoryOthersRemoveEffects.value, "Blood") then
		wait()
		child:Remove()
	end
end)

createNewMessage = hookfunc(getsenv(game.Players.LocalPlayer.PlayerGui.GUI.Main.Chats.DisplayChat).createNewMessage, function(plr, msg, teamcolor, msgcolor, offset, line)
	if library.pointers.MiscellaneousTabCategoryMainNNSDontTalk.value == true and plr ~= game.Players.LocalPlayer.Name then
		msg = "I am retarded."
	end
	
	return createNewMessage(plr, msg, teamcolor, msgcolor, offset, line)
end)

game.ReplicatedStorage.Events.SendMsg.OnClientEvent:Connect(function(message)
	if library.pointers.MiscellaneousTabCategoryMainAntiVoteKick.value == true then
		local msg = string.split(message, " ")
		
		if game.Players:FindFirstChild(msg[1]) and msg[7] == "1" and msg[12] == game.Players.LocalPlayer.Name then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
		end
	end
end)

LocalPlayer.PlayerGui.Menew.MainFrame.SkinShop.MouseButton1Click:Connect(function()
	if LocalPlayer.PlayerGui.Menew.MainFrame.SkinShop.Warn.Visible == true and library.pointers.MiscellaneousTabCategoryMainUnlockShopWhileAlive.value == true then
		LocalPlayer.PlayerGui.Menew.ShopFrame.Position = UDim2.new(1, 0, 0, 0)
		LocalPlayer.PlayerGui.Menew.ShopFrame.Visible = true
		LocalPlayer.PlayerGui.Menew.ShopFrame:TweenPosition(UDim2.new(0, 0, 0, 0))
		LocalPlayer.PlayerGui.Menew.MainFrame:TweenPosition(UDim2.new(-1, 0, 0, 0))
	end
end)

UserInputService.InputBegan:Connect(function(key, isFocused)
	if key.UserInputType == Enum.UserInputType.MouseButton1 and UserInputService:GetFocusedTextBox() == nil then
		if library.pointers.MiscellaneousTabCategoryGunModsPlant.value == "Instant" and IsAlive(LocalPlayer) and LocalPlayer.Character.EquippedTool.Value == "C4" then
			game.ReplicatedStorage.Events.PlantC4:FireServer((LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -2.75, 0)) * CFrame.Angles(math.rad(90), 0, math.rad(180)), GetSite())
		elseif library.pointers.MiscellaneousTabCategoryGunModsPlant.value == "Anywhere" and IsAlive(LocalPlayer) and LocalPlayer.Character.EquippedTool.Value == "C4" then
			PlantC4()
		end
	elseif key.KeyCode == Enum.KeyCode.E then
		if library.pointers.MiscellaneousTabCategoryGunModsDefuse.value == "Instant" and workspace:FindFirstChild("C4") then
			spawn(function()
				wait(0.25)
				if IsAlive(LocalPlayer) and workspace:FindFirstChild("C4") and workspace.C4:FindFirstChild("Defusing") and LocalPlayer.PlayerGui.GUI.Defusal.Visible == true and workspace.C4.Defusing.Value == LocalPlayer then
					LocalPlayer.Backpack.Defuse:FireServer(workspace.C4)
				end
			end)
		elseif library.pointers.MiscellaneousTabCategoryGunModsDefuse.value == "Anywhere" and IsAlive(LocalPlayer) then
			DefuseC4()
		end
	elseif key.KeyCode == library.pointers.SettingsTabCategoryUIToggleKeybind.value then
		library.base.Window.Visible = not library.base.Window.Visible
	end
end)

RunService.RenderStepped:Connect(function()
	if library.pointers.AimbotTabCategoryLegitbotEnabled.value == true and library.base.Window.Visible == false and IsAlive(LocalPlayer) then
		if library.pointers.AimbotTabCategoryLegitbotKeybind.value ~= nil then
			if not UserInputService:IsKeyDown(library.pointers.AimbotTabCategoryLegitbotKeybind.value) then
				return
			end
		end
		
		plr = GetLegitbotTarget()
		
		if plr ~= nil then
			hitboxpart = GetLegitbotHitbox(plr)
			
			if hitboxpart ~= nil then
				local Vector, onScreen = workspace.CurrentCamera:WorldToScreenPoint(hitboxpart.Position)
				local PositionX = (Mouse.X-Vector.X)/library.pointers.AimbotTabCategoryLegitbotSmoothness.value + 1
				local PositionY = (Mouse.Y-Vector.Y)/library.pointers.AimbotTabCategoryLegitbotSmoothness.value + 1
				
				if library.pointers.AimbotTabCategoryLegitbotSilent.value == true then
					SilentLegitbot.target = hitboxpart
					SilentLegitbot.aiming = true
				else
					mousemove(-PositionX, -PositionY)
					if SilentLegitbot.aiming == true then SilentLegitbot.aiming = false end
				end
			else
				if SilentLegitbot.aiming == true then SilentLegitbot.aiming = false end
			end
		else
			if SilentLegitbot.aiming == true then SilentLegitbot.aiming = false end
		end
	else
		if SilentLegitbot.aiming == true then SilentLegitbot.aiming = false end
	end
end)

Hint.Text = "Hexagon | Disabling anticheat..."

LocalPlayer.PlayerScripts:WaitForChild("scapter").Disabled = true

local mt = getrawmetatable(game)

local oldNamecall = mt.__namecall
local oldNewIndex = getrawmetatable(game.Players.LocalPlayer.PlayerGui.Client).__newindex
local oldIndex = getrawmetatable(game.Players.LocalPlayer.PlayerGui.Client).__index

if setreadonly then setreadonly(mt, false) else make_writeable(mt, true) end

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
	local callingscript = getcallingscript()
    local args = {...}
	
	if not checkcaller() then
		if method == "Kick" then
			return
		elseif method == "FireServer" then
			if self.Name == "ReplicateCamera" then
				if library.pointers.MiscellaneousTabCategoryMainAntiSpectators.value == true then
					args[1] = CFrame.new()
				elseif library.pointers.VisualsTabCategoryThirdPersonEnabled.value == true then
					args[1] = workspace.CurrentCamera.CFrame * CFrame.new(0, 0, -library.pointers.VisualsTabCategoryThirdPersonDistance.value)
				end
			elseif self.Name == "ControlTurn" and library.pointers.AimbotTabCategoryAntiAimbotEnabled.value == true and library.pointers.AimbotTabCategoryAntiAimbotPitch.value ~= "Default" then
				local angle = (
					library.pointers.AimbotTabCategoryAntiAimbotPitch.value == "Up" and 1 or
					library.pointers.AimbotTabCategoryAntiAimbotPitch.value == "Down" and -1 or
					library.pointers.AimbotTabCategoryAntiAimbotPitch.value == "Boneless" and -5 or
					library.pointers.AimbotTabCategoryAntiAimbotPitch.value == "Random" and (math.random(1,2) == 1 and 1 or -1)
				)
				if angle then
					args[1] = angle
				end
			elseif string.len(self.Name) == 38 then
				return wait(99e99)
			elseif self.Name == "ApplyGun" and args[1] == game.ReplicatedStorage.Weapons.Banana or args[1] == game.ReplicatedStorage.Weapons["Flip Knife"] then
				args[1] = game.ReplicatedStorage.Weapons.Karambit
			elseif self.Name == "HitPart" then
				args[8] = args[8] * library.pointers.MiscellaneousTabCategoryGunModsDamageMultiplier.value

				if library.pointers.VisualsTabCategoryOthersBulletTracers.value == true then
					spawn(function()
						local BulletTracers = Instance.new("Part")
						BulletTracers.Anchored = true
						BulletTracers.CanCollide = false
						BulletTracers.Material = "ForceField"
						BulletTracers.Color = library.pointers.VisualsTabCategoryOthersBulletTracersColor.value
						BulletTracers.Size = Vector3.new(0.1, 0.1, (LocalPlayer.Character.Head.CFrame.p - args[2]).magnitude)
						BulletTracers.CFrame = CFrame.new(LocalPlayer.Character.Head.CFrame.p, args[2]) * CFrame.new(0, 0, -BulletTracers.Size.Z / 2)
						BulletTracers.Name = "BulletTracers"
						BulletTracers.Parent = workspace.CurrentCamera
						wait(3)
						BulletTracers:Destroy()
					end)
				end
				
				if library.pointers.VisualsTabCategoryOthersBulletImpacts.value == true then
					spawn(function()
						local BulletImpacts = Instance.new("Part")
						BulletImpacts.Anchored = true
						BulletImpacts.CanCollide = false
						BulletImpacts.Material = "ForceField"
						BulletImpacts.Color = library.pointers.VisualsTabCategoryOthersBulletImpactsColor.value
						BulletImpacts.Size = Vector3.new(0.25, 0.25, 0.25)
						BulletImpacts.CFrame = CFrame.new(args[2])
						BulletImpacts.Name = "BulletImpacts"
						BulletImpacts.Parent = workspace.CurrentCamera
						wait(3)
						BulletImpacts:Destroy()
					end)
				end
				
				if args[1].Parent == workspace.HexagonFolder then
					if args[1].PlayerName.Value.Character and args[1].PlayerName.Value.Character.Head ~= nil then
						args[1] = args[1].PlayerName.Value.Character.Head
					end
				end
			elseif self.Name == "test" then
				return
			elseif self.Name == "FallDamage" and library.pointers.MiscellaneousTabCategoryMainNoFallDamage.value == true then
				args[1] = 0
			elseif self.Name == "BURNME" and library.pointers.MiscellaneousTabCategoryMainNoFireDamage.value == true then
				return
			elseif self.Name == "DataEvent" and args[1][1] == "EquipItem" then
				local Weapon,Skin = args[1][3], string.split(args[1][4][1], "_")[2]
				local EquipTeams = (args[1][2] == "Both" and {"T", "CT"}) or {args[1][2]}

				for i,v in pairs(EquipTeams) do
					LocalPlayer.SkinFolder[v.."Folder"][Weapon]:ClearAllChildren()
					LocalPlayer.SkinFolder[v.."Folder"][Weapon].Value = Skin
					
					if args[1][4][2] == "StatTrak" then
						local Marker = Instance.new("StringValue")
						Marker.Name = "StatTrak"
						Marker.Value = args[1][4][3]
						Marker.Parent = LocalPlayer.SkinFolder[v.."Folder"][Weapon]
						
						local Count = Instance.new("IntValue")
						Count.Name = "Count"
						Count.Value = args[1][4][4]
						Count.Parent = Marker
					end
				end
			end
		elseif method == "InvokeServer" then
			if self.Name == "Moolah" then
				return
			elseif self.Name == "Hugh" then
				return wait(99e99)
			elseif self.Name == "Filter" and callingscript == LocalPlayer.PlayerGui.GUI.Main.Chats.DisplayChat and library.pointers.MiscellaneousTabCategoryMainNoChatFilter.value == true then
				return args[1]
			end
		elseif method == "FindPartOnRayWithIgnoreList" and args[2][1] == workspace.Debris then
			if library.pointers.MiscellaneousTabCategoryGunModsWallbang.value == true then
				table.insert(args[2], workspace.Map)
			end
			if IsAlive(LocalPlayer) and SilentLegitbot.aiming == true and typeof(SilentLegitbot.target) == "Instance" then
				local hitchance = math.random(0,100)
				
				if hitchance <= library.pointers.AimbotTabCategoryLegitbotHitchance.value then
					args[1] = Ray.new(LocalPlayer.Character.Head.Position, (SilentLegitbot.target.Position - LocalPlayer.Character.Head.Position).unit * 2048)
				end
			end
		elseif method == "SetPrimaryPartCFrame" and self.Name == "Arms" and library.pointers.VisualsTabCategoryViewmodelEnabled.value == true then
			args[1] = args[1] * CFrame.new(Vector3.new(math.rad(library.pointers.VisualsTabCategoryViewmodelOffsetX.value-180),math.rad(library.pointers.VisualsTabCategoryViewmodelOffsetY.value-180),math.rad(library.pointers.VisualsTabCategoryViewmodelOffsetZ.value-180))) * CFrame.Angles(0, 0, math.rad(library.pointers.VisualsTabCategoryViewmodelOffsetRoll.value-180))
		end
	end
	
	return oldNamecall(self, unpack(args))
end)

getrawmetatable(game.Players.LocalPlayer.PlayerGui.Client).__newindex = newcclosure(function(self, idx, val)
    local callingscript = getcallingscript()

    if callingscript == LocalPlayer.PlayerGui.Client and self.Parent == LocalPlayer.Character then
		if idx == "WalkSpeed" and isBhopping == true and val ~= 0 then
			val = curVel
		end
    end

    return oldNewIndex(self, idx, val)
end)

getrawmetatable(game.Players.LocalPlayer.PlayerGui.Client).__index = newcclosure(function(...)
	local args = {...}
	
	if not checkcaller() then
		if args[2] == "Value" then
			if args[1].Name == "Auto" and library.pointers.MiscellaneousTabCategoryGunModsFullAuto.value == true then
				return true
			elseif args[1].Name == "FireRate" and library.pointers.MiscellaneousTabCategoryGunModsRapidFire.value == true then
				return 0.001
			elseif args[1].Name == "ReloadTime" and library.pointers.MiscellaneousTabCategoryGunModsInstantReload.value == true then
				return 0.001
			elseif args[1].Name == "EquipTime" and library.pointers.MiscellaneousTabCategoryGunModsInstantEquip.value == true then
				return 0.001
			elseif args[1].Name == "Penetration" and library.pointers.MiscellaneousTabCategoryGunModsInfinitePenetration.value == true then
				return 200
			elseif args[1].Name == "Range" and library.pointers.MiscellaneousTabCategoryGunModsInfiniteRange.value == true then
				return 9999
			elseif args[1].Name == "RangeModifier" and library.pointers.MiscellaneousTabCategoryGunModsInfiniteRange.value == true then
				return 100
			elseif (args[1].Name == "Spread" or args[1].Parent.Name == "Spread") and library.pointers.MiscellaneousTabCategoryGunModsNoSpread.value == true then
				return 0
			elseif (args[1].Name == "Ammo" or args[1].Name == "StoredAmmo") and library.pointers.MiscellaneousTabCategoryGunModsInfiniteAmmo.value == true then
				return 999999
			end
		end
	end

    return oldIndex(...)
end)

CharacterAdded()

table.foreach(game.Players:GetPlayers(), PlayerAdded)
game.Players.PlayerAdded:Connect(PlayerAdded)

for i,v in pairs({"CT", "T"}) do
	LocalPlayer.PlayerGui.GUI.Scoreboard[v].ChildAdded:Connect(function(child)
		wait(0.1)
		
		if child.Parent == LocalPlayer.PlayerGui.GUI.Scoreboard[v] and child:FindFirstChild("player") and child.player.Text ~= "PLAYER" and UserInputService:IsKeyDown(Enum.KeyCode.Tab) then
			if game.Players:FindFirstChild(child.player.Text) and game.Players[child.player.Text].OsPlatform:sub(1,1) == "|" then
				plr = game.Players[child.player.Text]
				child.player.Text = plr.OsPlatform:sub(2, 41).." "..plr.Name
				
				updater = plr:GetPropertyChangedSignal("OsPlatform"):Connect(function()
					if child and child.Parent and child:FindFirstChild("player") or UserInputService:IsKeyDown(Enum.KeyCode.Tab) and plr.OsPlatform:sub(1,1) == "|" then
						child.player.Text = plr.OsPlatform:sub(2, 41).." "..plr.Name
					else
						updater:Disconnect()
					end
				end)
			end
		end
	end)
end

print("Hexagon finished loading!")

Hint.Text = "Hexagon | Loading finished!"
wait(1.5)
Hint:Destroy()
end)

local MainSection = Main:NewSection("Natural Disaster Scripts")

MainSection:NewButton("CH Hub", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/RobloxHackingProject/CHHub/main/CHHub.lua"))()
end)

MainSection:NewButton("Tbao Hub", "ButtonInfo", function()
    loadstring(game:HttpGet("https://scriptblox.com/raw/Natural-Disaster-Survival-Tbao-Hub-14356"))()
end)

local TeleportTab = Window:NewTab("Teleport")
local TeleportSection = TeleportTab:NewSection("Teleport to Player")

-- Oyuncu listesi oluÃ…Å¸turma
local players = game.Players:GetPlayers()
for i, player in ipairs(players) do
    -- Her oyuncu iÃƒÂ§in teleport dÃƒÂ¼Ã„Å¸mesi oluÃ…Å¸turma
    TeleportSection:NewButton(player.Name, "Teleport to " .. player.Name, function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
    end)
end

local MainSection = Main:NewSection("Doors Scripts")

MainSection:NewButton("Doors Script 1", "ButtonInfo", function()
    loadstring(game:HttpGet('https://rawscripts.net/raw/DOORS-FFJ-Hub-11365'))()
end)

local MainSection = Main:NewSection("MM2 Scripts")

MainSection:NewButton("Ghost Hub", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Murder%20Mystery"))()
end)

local MainSection = Main:NewSection("Brookhaven RP Scripts")

MainSection:NewButton("Redz Hub", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/REDzHUB/main/REDzHUB"))()
end)

MainSection:NewButton("Meta Hub", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/NocturneMoDz/BROOKHAVEN-GUI-/main/METAB", true))()
end)

local MainSection = Main:NewSection("Blade Ball Scripts")

MainSection:NewButton("Blade Ball Script", "ButtonInfo", function()
    loadstring(game:HttpGet("https://pastefy.app/G46MmBn7/raw"))()
end)

local Player = Window:NewTab("Speed And Jump Power")
local PlayerSection = Player:NewSection("Speed And Jump Power")

PlayerSection:NewSlider("WalkSpeed", "Adjust your walk speed", 500, 16, function(value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
end)

-- Oyuncu zÃ„Â±plama gÃƒÂ¼cÃƒÂ¼ ayarlayan kaydÃ„Â±rÃ„Â±cÃ„Â±
PlayerSection:NewSlider("JumpPower", "Adjust your jump power", 250, 50, function(value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)

-- UyarÃ„Â± veren dÃƒÂ¼Ã„Å¸me eklemek
PlayerSection:NewButton("Reset Settings", "Reset all settings to default", function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    print("Settings reset to default.")
end)


local MainSection = Main:NewSection("Who Is The Spy? (KEYLESS)")

MainSection:NewButton("Script1", "ButtonInfo", function()
    -- Roblox Script: Key Check GUI

-- Check if GUI is already active
if game.Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("KeyCheckGui") then
    game.Players.LocalPlayer.PlayerGui:FindFirstChild("KeyCheckGui"):Destroy()
end

-- Define the required key
local REQUIRED_KEY = "arasvebaris"

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KeyCheckGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create a Frame for the GUI
local guiFrame = Instance.new("Frame")
guiFrame.Size = UDim2.new(0, 300, 0, 180)
guiFrame.Position = UDim2.new(0.5, -150, 0.5, -90)
guiFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
guiFrame.BorderSizePixel = 0
guiFrame.Active = true
guiFrame.Draggable = true
guiFrame.Parent = screenGui

-- Create a Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Key Check"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.Parent = guiFrame

-- Create Close (X) Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = guiFrame
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Create Minimize (-) Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8)
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 18
minimizeButton.Parent = guiFrame

local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    guiFrame.Size = isMinimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 180)
    for _, child in ipairs(guiFrame:GetChildren()) do
        if child ~= titleLabel and child ~= closeButton and child ~= minimizeButton then
            child.Visible = not isMinimized
        end
    end
end)

-- Create TextBox for Key Input
local keyInput = Instance.new("TextBox")
keyInput.Size = UDim2.new(0, 260, 0, 30)
keyInput.Position = UDim2.new(0, 20, 0, 50)
keyInput.PlaceholderText = "Enter your key"
keyInput.Text = ""
keyInput.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
keyInput.TextColor3 = Color3.new(1, 1, 1)
keyInput.Font = Enum.Font.SourceSansBold
keyInput.TextSize = 18
keyInput.Parent = guiFrame

-- Create Check Key Button
local checkKeyButton = Instance.new("TextButton")
checkKeyButton.Size = UDim2.new(0, 260, 0, 30)
checkKeyButton.Position = UDim2.new(0, 20, 0, 90)
checkKeyButton.Text = "Check Key"
checkKeyButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2)
checkKeyButton.TextColor3 = Color3.new(1, 1, 1)
checkKeyButton.Font = Enum.Font.SourceSansBold
checkKeyButton.TextSize = 18
checkKeyButton.Parent = guiFrame

checkKeyButton.MouseButton1Click:Connect(function()
    local inputText = keyInput.Text
    if inputText == REQUIRED_KEY then
        guiFrame:Destroy()

        -- Create the new GUI
        local newGuiFrame = Instance.new("Frame")
        newGuiFrame.Size = UDim2.new(0, 300, 0, 200)
        newGuiFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
        newGuiFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
        newGuiFrame.BorderSizePixel = 0
        newGuiFrame.Active = true
        newGuiFrame.Draggable = true
        newGuiFrame.Parent = screenGui

        local newTitleLabel = Instance.new("TextLabel")
        newTitleLabel.Size = UDim2.new(1, 0, 0, 30)
        newTitleLabel.Position = UDim2.new(0, 0, 0, 0)
        newTitleLabel.BackgroundTransparency = 1
        newTitleLabel.Text = "Admin Control"
        newTitleLabel.TextColor3 = Color3.new(1, 1, 1)
        newTitleLabel.Font = Enum.Font.SourceSansBold
        newTitleLabel.TextSize = 20
        newTitleLabel.Parent = newGuiFrame

        local adminCloseButton = Instance.new("TextButton")
        adminCloseButton.Size = UDim2.new(0, 30, 0, 30)
        adminCloseButton.Position = UDim2.new(1, -35, 0, 5)
        adminCloseButton.Text = "X"
        adminCloseButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
        adminCloseButton.TextColor3 = Color3.new(1, 1, 1)
        adminCloseButton.Font = Enum.Font.SourceSansBold
        adminCloseButton.TextSize = 18
        adminCloseButton.Parent = newGuiFrame
        adminCloseButton.MouseButton1Click:Connect(function()
            screenGui:Destroy()
        end)

        local adminMinimizeButton = Instance.new("TextButton")
        adminMinimizeButton.Size = UDim2.new(0, 30, 0, 30)
        adminMinimizeButton.Position = UDim2.new(1, -70, 0, 5)
        adminMinimizeButton.Text = "-"
        adminMinimizeButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8)
        adminMinimizeButton.TextColor3 = Color3.new(1, 1, 1)
        adminMinimizeButton.Font = Enum.Font.SourceSansBold
        adminMinimizeButton.TextSize = 18
        adminMinimizeButton.Parent = newGuiFrame

        local isAdminMinimized = false
        adminMinimizeButton.MouseButton1Click:Connect(function()
            isAdminMinimized = not isAdminMinimized
            newGuiFrame.Size = isAdminMinimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 200)
            for _, child in ipairs(newGuiFrame:GetChildren()) do
                if child ~= newTitleLabel and child ~= adminCloseButton and child ~= adminMinimizeButton then
                    child.Visible = not isAdminMinimized
                end
            end
        end)

        local onButton = Instance.new("TextButton")
        onButton.Size = UDim2.new(0, 100, 0, 40)
        onButton.Position = UDim2.new(0, 20, 0, 50)
        onButton.Text = "On"
        onButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2)
        onButton.TextColor3 = Color3.new(1, 1, 1)
        onButton.Font = Enum.Font.SourceSansBold
        onButton.TextSize = 18
        onButton.Parent = newGuiFrame
        onButton.MouseButton1Click:Connect(function()
            game.Players.LocalPlayer.PlayerGui.Interface.Main.adminFrame.Active = true
            game.Players.LocalPlayer.PlayerGui.Interface.Main.adminFrame.Visible = true
        end)

        local offButton = Instance.new("TextButton")
        offButton.Size = UDim2.new(0, 100, 0, 40)
        offButton.Position = UDim2.new(0, 130, 0, 50)
        offButton.Text = "Off"
        offButton.BackgroundColor3 = Color3.new(0.6, 0.2, 0.2)
        offButton.TextColor3 = Color3.new(1, 1, 1)
        offButton.Font = Enum.Font.SourceSansBold
        offButton.TextSize = 18
        offButton.Parent = newGuiFrame
        offButton.MouseButton1Click:Connect(function()
            game.Players.LocalPlayer.PlayerGui.Interface.Main.adminFrame.Active = false
            game.Players.LocalPlayer.PlayerGui.Interface.Main.adminFrame.Visible = false
        end)
    else
        game.Players.LocalPlayer:Kick("Yanlis Anahtar")
    end
end)

-- Create Get Key Button
local getKeyButton = Instance.new("TextButton")
getKeyButton.Size = UDim2.new(0, 260, 0, 30)
getKeyButton.Position = UDim2.new(0, 20, 0, 130)
getKeyButton.Text = "Get Key"
getKeyButton.BackgroundColor3 = Color3.new(0.6, 0.6, 0.2)
getKeyButton.TextColor3 = Color3.new(1, 1, 1)
getKeyButton.Font = Enum.Font.SourceSansBold
getKeyButton.TextSize = 18
getKeyButton.Parent = guiFrame

getKeyButton.MouseButton1Click:Connect(function()
    setclipboard("https://lootdest.org/s?36a1cbe0")
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "Copied Link To Clipboard",
        Color = Color3.new(0, 1, 0),
        Font = Enum.Font.SourceSansBold,
        FontSize = Enum.FontSize.Size24
    })
end)

end)


local MainSection = Main:NewSection("Build A Boat Scripts")

MainSection:NewButton("Auto Farm", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Waza80/scripts-new/main/BuildABoat.lua"))()
end)

local Main = Window:NewTab("Others")
local MainSection = Main:NewSection("Others")


MainSection:NewButton("Leave", "ButtonInfo", function()
-- Oyuncu oyuna girdiğinde GUI ile "Are you sure?" sorusunu sorar

local player = game.Players.LocalPlayer

-- GUI oluştur
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ConfirmLeaveGui"
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 150)
Frame.Position = UDim2.new(0.5, -150, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0.4, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Are you sure?"
Title.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 24
Title.Parent = Frame

local YesButton = Instance.new("TextButton")
YesButton.Size = UDim2.new(0.4, 0, 0.3, 0)
YesButton.Position = UDim2.new(0.1, 0, 0.5, 0)
YesButton.Text = "Yes"
YesButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
YesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
YesButton.Font = Enum.Font.SourceSansBold
YesButton.TextSize = 18
YesButton.Parent = Frame

local NoButton = Instance.new("TextButton")
NoButton.Size = UDim2.new(0.4, 0, 0.3, 0)
NoButton.Position = UDim2.new(0.5, 0, 0.5, 0)
NoButton.Text = "No"
NoButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
NoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoButton.Font = Enum.Font.SourceSansBold
NoButton.TextSize = 18
NoButton.Parent = Frame

-- Yes butonuna tıklandığında oyuncuyu oyundan atar
YesButton.MouseButton1Click:Connect(function()
    player:Kick("You Leaved")
end)

-- No butonuna tıklandığında GUI kapanır
NoButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

end)

MainSection:NewButton("Rejoin", "ButtonInfo", function()
-- Oyuncu oyuna girdiğinde GUI ile "Are you sure?" sorusunu sorar

local player = game.Players.LocalPlayer

-- GUI oluştur
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ConfirmRejoinGui"
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 150)
Frame.Position = UDim2.new(0.5, -150, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0.4, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Are you sure?"
Title.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 24
Title.Parent = Frame

local YesButton = Instance.new("TextButton")
YesButton.Size = UDim2.new(0.4, 0, 0.3, 0)
YesButton.Position = UDim2.new(0.1, 0, 0.5, 0)
YesButton.Text = "Yes"
YesButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
YesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
YesButton.Font = Enum.Font.SourceSansBold
YesButton.TextSize = 18
YesButton.Parent = Frame

local NoButton = Instance.new("TextButton")
NoButton.Size = UDim2.new(0.4, 0, 0.3, 0)
NoButton.Position = UDim2.new(0.5, 0, 0.5, 0)
NoButton.Text = "No"
NoButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
NoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoButton.Font = Enum.Font.SourceSansBold
NoButton.TextSize = 18
NoButton.Parent = Frame

-- Yes butonuna tıklandığında aynı servere rejoin
YesButton.MouseButton1Click:Connect(function()
    local teleportService = game:GetService("TeleportService")
    teleportService:TeleportToPlaceInstance(
        game.PlaceId,
        game.JobId,
        player
    )
end)

-- No butonuna tıklandığında GUI kapanır
NoButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

end)
MainSection:NewButton("Earthquake!(FE)!", "ButtonInfo", function()
-- Earthquake GUI Script

-- Parent this script to StarterGui in Roblox Studio

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EarthquakeGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 150)
frame.Position = UDim2.new(0.5, -150, 0.5, -75)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
titleLabel.Text = "Earthquake Controller"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.Parent = frame

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = frame

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Magnitude Input Box
local magnitudeInput = Instance.new("TextBox")
magnitudeInput.Size = UDim2.new(0, 260, 0, 30)
magnitudeInput.Position = UDim2.new(0, 20, 0, 40)
magnitudeInput.PlaceholderText = "Enter Magnitude"
magnitudeInput.Text = ""
magnitudeInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
magnitudeInput.TextColor3 = Color3.new(1, 1, 1)
magnitudeInput.Font = Enum.Font.SourceSansBold
magnitudeInput.TextSize = 18
magnitudeInput.Parent = frame

-- Start Button
local startButton = Instance.new("TextButton")
startButton.Size = UDim2.new(0, 120, 0, 40)
startButton.Position = UDim2.new(0, 20, 0, 90)
startButton.Text = "Start"
startButton.BackgroundColor3 = Color3.new(0.2, 0.8, 0.2)
startButton.TextColor3 = Color3.new(1, 1, 1)
startButton.Font = Enum.Font.SourceSansBold
startButton.TextSize = 18
startButton.Parent = frame

-- Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 120, 0, 40)
stopButton.Position = UDim2.new(0, 160, 0, 90)
stopButton.Text = "Stop"
stopButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.SourceSansBold
stopButton.TextSize = 18
stopButton.Parent = frame

-- Earthquake Simulation Logic
local earthquakeActive = false
local function startEarthquake(magnitude)
    earthquakeActive = true
    spawn(function()
        while earthquakeActive do
            local offset = Vector3.new(
                math.random(-magnitude, magnitude) * 0.1,
                0,
                math.random(-magnitude, magnitude) * 0.1
            )
            for _, part in pairs(workspace:GetDescendants()) do
                if part:IsA("BasePart") and part.Anchored then
                    part.Position = part.Position + offset
                end
            end
            wait(0.1)
        end
    end)
end

local function stopEarthquake()
    earthquakeActive = false
end

-- Button Actions
startButton.MouseButton1Click:Connect(function()
    local magnitude = tonumber(magnitudeInput.Text)
    if magnitude and magnitude > 0 then
        stopEarthquake() -- Stop any existing earthquake
        startEarthquake(magnitude)
    else
        magnitudeInput.Text = "Invalid Magnitude"
    end
end)

stopButton.MouseButton1Click:Connect(function()
    stopEarthquake()
end)

end)

MainSection:NewButton("Earthquake(FE)[LAGGY]", "ButtonInfo", function()
-- Roblox Script: Earthquake GUI with Adjustable Magnitude

-- Define the earthquake function
local function startEarthquake(magnitude)
    local shaking = true
    
    spawn(function()
        while shaking do
            local offset = Vector3.new(
                math.random(-magnitude, magnitude) * 0.1,
                0,
                math.random(-magnitude, magnitude) * 0.1
            )
            for _, part in pairs(workspace:GetDescendants()) do
                if part:IsA("BasePart") and not part.Anchored then
                    part.Position = part.Position + offset
                end
            end
            wait(0.1)
        end
    end)

    return function()
        shaking = false
    end
end

-- Create the GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EarthquakeGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 200)
frame.Position = UDim2.new(0.5, -150, 0.5, -100)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
titleLabel.Text = "Earthquake Control"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 20
titleLabel.Parent = frame

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = frame
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.Text = "-"
minimizeButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8)
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 18
minimizeButton.Parent = frame

local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    frame.Size = isMinimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 200)
    for _, child in ipairs(frame:GetChildren()) do
        if child ~= titleLabel and child ~= closeButton and child ~= minimizeButton then
            child.Visible = not isMinimized
        end
    end
end)

local magnitudeInput = Instance.new("TextBox")
magnitudeInput.Size = UDim2.new(0, 260, 0, 30)
magnitudeInput.Position = UDim2.new(0, 20, 0, 50)
magnitudeInput.PlaceholderText = "Enter Magnitude"
magnitudeInput.Text = ""
magnitudeInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
magnitudeInput.TextColor3 = Color3.new(1, 1, 1)
magnitudeInput.Font = Enum.Font.SourceSansBold
magnitudeInput.TextSize = 18
magnitudeInput.Parent = frame

local startButton = Instance.new("TextButton")
startButton.Size = UDim2.new(0, 120, 0, 40)
startButton.Position = UDim2.new(0, 20, 0, 100)
startButton.Text = "Start"
startButton.BackgroundColor3 = Color3.new(0.2, 0.8, 0.2)
startButton.TextColor3 = Color3.new(1, 1, 1)
startButton.Font = Enum.Font.SourceSansBold
startButton.TextSize = 18
startButton.Parent = frame

local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 120, 0, 40)
stopButton.Position = UDim2.new(0, 160, 0, 100)
stopButton.Text = "Stop"
stopButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.SourceSansBold
stopButton.TextSize = 18
stopButton.Parent = frame

local stopEarthquake

startButton.MouseButton1Click:Connect(function()
    local magnitude = tonumber(magnitudeInput.Text)
    if magnitude and magnitude > 0 then
        if stopEarthquake then stopEarthquake() end
        stopEarthquake = startEarthquake(magnitude)
    else
        magnitudeInput.Text = "Invalid Magnitude"
    end
end)

stopButton.MouseButton1Click:Connect(function()
    if stopEarthquake then
        stopEarthquake()
        stopEarthquake = nil
    end
end)


end)
MainSection:NewButton("Fling All!", "ButtonInfo", function()
    --[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Targets = {"All"} -- "All", "Target Name", "arian_was_here"

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local AllBool = false

local GetPlayer = function(Name)
    Name = Name:lower()
    if Name == "all" or Name == "others" then
        AllBool = true
        return
    elseif Name == "random" then
        local GetPlayers = Players:GetPlayers()
        if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
        return GetPlayers[math.random(#GetPlayers)]
    elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
        for _,x in next, Players:GetPlayers() do
            if x ~= Player then
                if x.Name:lower():match("^"..Name) then
                    return x;
                elseif x.DisplayName:lower():match("^"..Name) then
                    return x;
                end
            end
        end
    else
        return
    end
end

local Message = function(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

local SkidFling = function(TargetPlayer)
    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local THumanoid
    local TRootPart
    local THead
    local Accessory
    local Handle

    if TCharacter:FindFirstChildOfClass("Humanoid") then
        THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
    end
    if THumanoid and THumanoid.RootPart then
        TRootPart = THumanoid.RootPart
    end
    if TCharacter:FindFirstChild("Head") then
        THead = TCharacter.Head
    end
    if TCharacter:FindFirstChildOfClass("Accessory") then
        Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    end
    if Accessoy and Accessory:FindFirstChild("Handle") then
        Handle = Accessory.Handle
    end

    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
        end
        if THumanoid and THumanoid.Sit and not AllBool then
            return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
        end
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif not THead and Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        elseif THumanoid and TRootPart then
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end
        
        local FPos = function(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end
        
        local SFBasePart = function(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 0

            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle = Angle + 100

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
        end
        
        workspace.FallenPartsDestroyHeight = 0/0
        
        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
        
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        
        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
            return Message("Error Occurred", "Target is missing everything", 5)
        end
        
        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid
        
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
            Humanoid:ChangeState("GettingUp")
            table.foreach(Character:GetChildren(), function(_, x)
                if x:IsA("BasePart") then
                    x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                end
            end)
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
        workspace.FallenPartsDestroyHeight = getgenv().FPDH
    else
        return Message("Error Occurred", "Random error", 5)
    end
end

if not Welcome then Message("Script by Baris", "Enjoy!", 5) end
getgenv().Welcome = true
if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end

if AllBool then
    for _,x in next, Players:GetPlayers() do
        SkidFling(x)
    end
end

for _,x in next, Targets do
    if GetPlayer(x) and GetPlayer(x) ~= Player then
        if GetPlayer(x).UserId ~= 1414978355 then
            local TPlayer = GetPlayer(x)
            if TPlayer then
                SkidFling(TPlayer)
            end
        else
            Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
        end
    elseif not GetPlayer(x) and not AllBool then
        Message("Error Occurred", "Username Invalid", 5)
    end
end
end)

local Main = Window:NewTab("Credits")
local MainSection = Main:NewSection("By bok31_31mal , BARIS")
